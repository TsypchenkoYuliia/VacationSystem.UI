[{"C:\\Users\\tsypa\\vacationsystem-ui\\src\\App.js":"1","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Login.js":"2","C:\\Users\\tsypa\\vacationsystem-ui\\src\\index.js":"3","C:\\Users\\tsypa\\vacationsystem-ui\\src\\reportWebVitals.js":"4","C:\\Users\\tsypa\\vacationsystem-ui\\src\\components\\Header.js":"5","C:\\Users\\tsypa\\vacationsystem-ui\\src\\components\\Navbar.js":"6","C:\\Users\\tsypa\\vacationsystem-ui\\src\\Context.js":"7","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\NewRequest.js":"8","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Requests.js":"9","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Reviews.js":"10","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Home.js":"11","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\index.js":"12","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\App.js":"13","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\reportWebVitals.js":"14","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Reviews.js":"15","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Login.js":"16","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\NewRequest.js":"17","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Requests.js":"18","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Home.js":"19","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Header.js":"20","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Navbar.js":"21","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ReviewsTable.js":"22","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\axios.js":"23","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\axiosConfig.js":"24","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Approved.js":"25","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Rejected.js":"26","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RequestsTable.js":"27","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\View.js":"28","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RequestView.js":"29","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ApprovedReviewsTable.js":"30","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RejectedReviewsTable.js":"31","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Admin.js":"32","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\AdminTable.js":"33","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\NewUser.js":"34","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\UserView.js":"35","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\UserEdit.js":"36","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\types.js":"37","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\StatisticData.js":"38","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\countDays.js":"39","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Calendar.js":"40","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ReviewerName.js":"41"},{"size":1312,"mtime":1609604508402,"results":"42","hashOfConfig":"43"},{"size":2176,"mtime":1609604387597,"results":"44","hashOfConfig":"43"},{"size":500,"mtime":1609506889662,"results":"45","hashOfConfig":"43"},{"size":362,"mtime":1609506889662,"results":"46","hashOfConfig":"43"},{"size":910,"mtime":1609601283388,"results":"47","hashOfConfig":"43"},{"size":1627,"mtime":1609611313065,"results":"48","hashOfConfig":"43"},{"size":79,"mtime":1609601216906,"results":"49","hashOfConfig":"43"},{"size":4559,"mtime":1609611808473,"results":"50","hashOfConfig":"43"},{"size":179,"mtime":1609604053873,"results":"51","hashOfConfig":"43"},{"size":176,"mtime":1609604084072,"results":"52","hashOfConfig":"43"},{"size":214,"mtime":1609604538462,"results":"53","hashOfConfig":"43"},{"size":517,"mtime":1609613651013,"results":"54","hashOfConfig":"55"},{"size":2144,"mtime":1613403939518,"results":"56","hashOfConfig":"55"},{"size":375,"mtime":1609613651018,"results":"57","hashOfConfig":"55"},{"size":384,"mtime":1611505719967,"results":"58","hashOfConfig":"55"},{"size":2256,"mtime":1613987965197,"results":"59","hashOfConfig":"55"},{"size":7178,"mtime":1613987940371,"results":"60","hashOfConfig":"55"},{"size":261,"mtime":1611505717020,"results":"61","hashOfConfig":"55"},{"size":2276,"mtime":1613985997140,"results":"62","hashOfConfig":"55"},{"size":940,"mtime":1613987903741,"results":"63","hashOfConfig":"55"},{"size":8537,"mtime":1613986102652,"results":"64","hashOfConfig":"55"},{"size":17537,"mtime":1613918078922,"results":"65","hashOfConfig":"55"},{"size":2781,"mtime":1613904656814,"results":"66","hashOfConfig":"55"},{"size":346,"mtime":1613987891820,"results":"67","hashOfConfig":"55"},{"size":412,"mtime":1611505697938,"results":"68","hashOfConfig":"55"},{"size":412,"mtime":1611505714073,"results":"69","hashOfConfig":"55"},{"size":16219,"mtime":1613918051821,"results":"70","hashOfConfig":"55"},{"size":303,"mtime":1611505725787,"results":"71","hashOfConfig":"55"},{"size":7784,"mtime":1613987932849,"results":"72","hashOfConfig":"55"},{"size":11640,"mtime":1613918007182,"results":"73","hashOfConfig":"55"},{"size":11857,"mtime":1612038324208,"results":"74","hashOfConfig":"55"},{"size":424,"mtime":1611505694997,"results":"75","hashOfConfig":"55"},{"size":13785,"mtime":1613917995689,"results":"76","hashOfConfig":"55"},{"size":6128,"mtime":1613921603046,"results":"77","hashOfConfig":"55"},{"size":376,"mtime":1611505722971,"results":"78","hashOfConfig":"55"},{"size":6039,"mtime":1613933292596,"results":"79","hashOfConfig":"55"},{"size":480,"mtime":1612034585979,"results":"80","hashOfConfig":"55"},{"size":2457,"mtime":1612037179576,"results":"81","hashOfConfig":"55"},{"size":212,"mtime":1611478449735,"results":"82","hashOfConfig":"55"},{"size":421,"mtime":1613918014041,"results":"83","hashOfConfig":"55"},{"size":565,"mtime":1612038425030,"results":"84","hashOfConfig":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18mmd94",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"17oqzwl",{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"111"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"111"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"111"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"111"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"111"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"111"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"111"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"111"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"111"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"111"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"111"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"111"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"111"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kmgz2e","C:\\Users\\tsypa\\vacationsystem-ui\\src\\App.js",["184","185","186","187","188"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Login.js",["189"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\index.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\reportWebVitals.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\components\\Header.js",["190","191","192","193"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\components\\Navbar.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\Context.js",[],["194","195"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\NewRequest.js",["196"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Requests.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Reviews.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Home.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\index.js",[],["197","198"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\App.js",["199","200","201","202","203"],"import { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './pages/Login';\r\nimport Home from './pages/Home';\r\nimport Requests from './pages/Requests';\r\nimport Reviews from './pages/Reviews';\r\nimport Approved from './pages/Approved';\r\nimport Rejected from './pages/Rejected';\r\nimport View from './pages/View';\r\nimport NewRequest from './pages/NewRequest';\r\nimport Header from './components/Header';\r\nimport Admin from './pages/Admin';\r\nimport NewUser from './pages/NewUser'\r\nimport UserView from './pages/UserView';\r\n\r\n\r\nconst access_token = localStorage.getItem('access_token');\r\nconst userId = localStorage.getItem('userId');\r\nconst role = localStorage.getItem('role');\r\nconst firstname = localStorage.getItem('firstname');\r\nconst lastname = localStorage.getItem('lastname');\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <Header/>\r\n      <BrowserRouter>\r\n      <Switch>\r\n            <Route path=\"/login\" exact>\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/newRequest\" exact>\r\n              <NewRequest />\r\n            </Route>\r\n            <Route path=\"/requests\" exact>\r\n              <Requests />\r\n            </Route>\r\n            <Route path=\"/reviews\" exact>\r\n              <Reviews />\r\n            </Route>\r\n            <Route path=\"/approved\" exact>\r\n              <Approved />\r\n            </Route>\r\n            <Route path=\"/rejected\" exact>\r\n              <Rejected />\r\n            </Route>\r\n            <Route path=\"/admin\" exact>\r\n              <Admin />\r\n            </Route>\r\n            <Route path=\"/newuser\" exact>\r\n              <NewUser />\r\n            </Route>\r\n            <Route path=\"/userview\" exact>\r\n              <UserView />\r\n            </Route>\r\n            <Route path=\"/view\" exact>\r\n              <View />\r\n            </Route>\r\n            <Route path=\"/home\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"*\" exact>\r\n            <Redirect to=\"/login\" />\r\n          </Route> \r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\reportWebVitals.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Reviews.js",["204"],"import Navbar from '../components/Navbar';\r\nimport Table from '../components/ReviewsTable';\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\nfunction Reviews() {\r\n    const [name, setName] = useState('review');\r\n    return <div className='content'>\r\n        <Navbar></Navbar>\r\n        <div>\r\n            <Table name={name} />\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Reviews;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Login.js",["205"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\NewRequest.js",["206","207","208"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Requests.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Home.js",["209","210","211"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Header.js",["212","213","214","215"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Navbar.js",["216"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ReviewsTable.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { getMyReviews } from '../axios';\r\nimport { getMyReviewsByFilter } from '../axios';\r\nimport { actionReview } from '../axios';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Select from '@material-ui/core/Select';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport StatisticData from './StatisticData';\r\n\r\ntoast.configure();\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n  { id: 'statistic', numeric: false, disablePadding: false, label: 'Statistic' },\r\n  { id: 'state', numeric: false, disablePadding: false, label: 'State' },\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'start', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'end', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n  { id: 'commentReviewer', numeric: false, disablePadding: false, label: 'Your comment' },\r\n  { id: 'action', numeric: false, disablePadding: false },\r\n];\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ backgroundColor: '#189AB4', color: '#D4F1F4', fontWeight: 'bold' }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    (<div></div>)\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    width: '93%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1\r\n  },\r\n  cell: {\r\n    backgroundcolor: 'red',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  let [comment, setComment] = useState(\"\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = reviews.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  let [reviews, setReviews] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    async function getAllData() {\r\n      await getMyReviews().then(({ data }) => {\r\n        setReviews(data);\r\n      });\r\n    }\r\n    getAllData();\r\n  }, []);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, reviews.length - page * rowsPerPage);\r\n\r\n  function action(review) {\r\n    review.comment = comment;\r\n    review.isApproved = 'true';\r\n    actionReview(review);\r\n  }\r\n\r\n  function reject(review) {\r\n    review.comment = comment;\r\n    review.isApproved = 'false';\r\n    actionReview(review);\r\n  }\r\n\r\n  const commentChange = (event) => {\r\n    setComment(event.target.value)\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  const [selectedDateFrom, setSelectedDateFrom] = React.useState(new Date('2021-01-01'));\r\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date('2021-12-31'));\r\n  const [state, setState] = React.useState(\"\");\r\n  const [start, setStart] = React.useState(\"\");\r\n  const [end, setEnd] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [statistic, setStatistic] = React.useState([]);\r\n\r\n  const handleDateChangeFrom = (event) => {\r\n    setStart(moment(event).format('YYYY-MM-DD').toString());\r\n    setSelectedDateFrom(event);\r\n  };\r\n\r\n  const handleDateChangeTo = (event) => {\r\n    setEnd(moment(event).format('YYYY-MM-DD').toString());\r\n    setSelectedDateTo(event);\r\n  };\r\n\r\n  const stateChange = (event) => {\r\n    setState(event.target.value);\r\n  };\r\n\r\n  const typeChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const nameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const filter = () => {\r\n    getMyReviewsByFilter(start, end, state, type, name).then(({ data }) => {\r\n      setReviews(data);\r\n    })\r\n      .catch((err) => {\r\n        toast.error(err.message, {\r\n          position: toast.POSITION.BOTTOM_CENTER\r\n        });\r\n      });;\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n\r\n      <div className='filterContainer'>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            style={{ width: '170px' }}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"From\"\r\n            value={selectedDateFrom}\r\n            onChange={handleDateChangeFrom}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            style={{ width: '170px', marginLeft: '20px' }}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"To\"\r\n            value={selectedDateTo}\r\n            onChange={handleDateChangeTo}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        <InputLabel id=\"demo-simple-select-label\" style={{ margin: '30px', marginRight: '2px' }}>State:</InputLabel>\r\n        <Select\r\n          style={{ minWidth: '170px', margin: '32px', marginLeft: '5px' }}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={stateChange}>\r\n\r\n          <MenuItem value={1}>New</MenuItem>\r\n          <MenuItem value={2}>In progress</MenuItem>\r\n          <MenuItem value={3}>Approved</MenuItem>\r\n          <MenuItem value={4}>Rejected</MenuItem>\r\n          <MenuItem value=\"\"> All</MenuItem>\r\n        </Select>\r\n        <InputLabel id=\"demo-simple-select-label\" style={{ margin: '30px', marginRight: '2px' }}>Type:</InputLabel>\r\n        <Select\r\n          style={{ minWidth: '170px', margin: '32px', marginLeft: '5px' }}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={typeChange}>\r\n          <MenuItem value={1}>Administrative</MenuItem>\r\n          <MenuItem value={2}>Annual</MenuItem>\r\n          <MenuItem value={3}>Study</MenuItem>\r\n          <MenuItem value={4}>Sick</MenuItem>\r\n          <MenuItem value=\"\"> All</MenuItem>\r\n        </Select>\r\n        <InputLabel id=\"demo-simple-select-label\" style={{ marginRight: '2px', marginTop: '30px' }}>Name</InputLabel>\r\n        <TextField id=\"standard-basic\" onChange={nameChange} value={name} style={{ minWidth: '120px', margin: '20px', marginTop: '30px' }} />\r\n        <Button onClick={() => filter()} style={{ margin: '15px', height: '40px', wight: '40px', color: '#05445E', background: '#189AB4'}}>Filter</Button>\r\n      </div>\r\n\r\n\r\n      <Paper className={classes.paper}\r\n        style={{ background: '#189AB4' }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n            style={{ background: '#D4F1F4' }}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={reviews.length}\r\n\r\n            />\r\n            <TableBody>\r\n              {stableSort(reviews, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((review, index) => {\r\n\r\n                  if (review.isApproved === null) {\r\n                    const isItemSelected = isSelected(review.id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    let typeStr = \"\";\r\n\r\n                    if (review.request.type == 1)\r\n                      typeStr = 'Administrative'\r\n                    if (review.request.type == 2)\r\n                      typeStr = 'Annual'\r\n                    if (review.request.type == 3)\r\n                      typeStr = 'Study'\r\n                    if (review.request.type == 4)\r\n                      typeStr = 'Sick'\r\n\r\n                    let statusStr = \"\";\r\n\r\n                    if (review.request.state == 1)\r\n                      statusStr = 'New'\r\n                    if (review.request.state == 2)\r\n                      statusStr = 'In progress'\r\n                    if (review.request.state == 3)\r\n                      statusStr = 'Approved'\r\n                    if (review.request.state == 4)\r\n                      statusStr = 'Rejected'\r\n\r\n\r\n\r\n                    return (\r\n\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, review.id)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={review.id}\r\n                        selected={isItemSelected}\r\n                      >\r\n\r\n\r\n                        <TableCell align=\"center\">\r\n                          <Tooltip title={review.request.user.phoneNumber} placement=\"top-end\" arrow>\r\n                            <Button\r\n                            >{review.request.user.lastName} {review.request.user.firstName}</Button>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\"><StatisticData request={review.request}></StatisticData></TableCell>\r\n                        <TableCell align=\"center\">{statusStr}</TableCell>\r\n                        <TableCell align=\"center\" >{typeStr}</TableCell>\r\n                        <TableCell align=\"center\" ><Moment format=\"DD/MM/YYYY\">{review.request.startDate}</Moment></TableCell>\r\n                        <TableCell align=\"center\"><Moment format=\"DD/MM/YYYY\">{review.request.endDate}</Moment></TableCell>\r\n                        <TableCell align=\"center\" >{review.request.comment}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Popup trigger={<Button>...</Button>} position=\"right center\">\r\n                            <div><TextField id=\"standard-basic\" onChange={commentChange} value={comment} /></div>\r\n                          </Popup>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Button\r\n                            onClick={() => action(review)}\r\n                            style={{ height: '20px', wight: '20px', color: '#05445E', textTransform: 'capitalize', backgroundColor:'#75E6DA', padding:'12px'}}\r\n                          >Approve</Button>\r\n                          <Button\r\n                            onClick={() => reject(review)}\r\n                            style={{ height: '20px', wight: '20px', color: '#D4F1F4', textTransform: 'capitalize', backgroundColor:'#05445E', padding:'12px'}}\r\n                          >Reject</Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows }}>\r\n\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={reviews.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\axios.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\axiosConfig.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Approved.js",["236","237"],"import Navbar from '../components/Navbar';\r\nimport ApprovedReviewsTable from '../components/ApprovedReviewsTable';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nfunction Approved() {\r\n    const [name, setName] = useState('approved');\r\n    return <div className='content'>\r\n        <Navbar></Navbar>\r\n        <div>\r\n            <ApprovedReviewsTable />\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Approved;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Rejected.js",["238","239"],"import Navbar from '../components/Navbar';\r\nimport RejectedReviewsTable from '../components/RejectedReviewsTable';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nfunction Rejected() {\r\n    const [name, setName] = useState('rejected');\r\n    return <div className='content'>\r\n        <Navbar></Navbar>\r\n        <div>\r\n            <RejectedReviewsTable />\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Rejected;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RequestsTable.js",["240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { getMyRequests } from '../axios';\r\nimport { getMyRequestsByFilter } from '../axios';\r\nimport { deleteRequest } from '../axios';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Select from '@material-ui/core/Select';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\ntoast.configure();\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'state', numeric: false, disablePadding: false, label: 'State' },\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'start', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'end', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n  { id: 'details', numeric: false, disablePadding: false, label: 'Reviewers comment' },\r\n  { id: 'action', numeric: false, disablePadding: false },\r\n];\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ background: '#189AB4', color: '#D4F1F4', fontWeight: 'bold'}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    (<div></div>)\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    width: '93%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  cell: {\r\n    backgroundcolor: 'red',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = requests.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  let [requests, setRequests] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    async function getAllData() {\r\n      await getMyRequests().then(({ data }) => {\r\n        setRequests(data);\r\n\r\n      });\r\n    }\r\n    getAllData();\r\n  }, []);\r\n\r\n\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, requests.length - page * rowsPerPage);\r\n  let history = useHistory();\r\n\r\n  function action(request) {\r\n    localStorage.setItem('request', request.id);\r\n    history.replace('/view');\r\n  }\r\n\r\n  function remove(request) {\r\n    localStorage.removeItem('request');\r\n\r\n    deleteRequest(request.id).then(({ data }) => {\r\n      toast.success(\"Request deleted\", {\r\n        position: toast.POSITION.BOTTOM_CENTER\r\n      });\r\n      getMyRequests().then(({ data }) => {\r\n        setRequests(data);\r\n      });\r\n    })\r\n      .catch((err) => {\r\n        toast.error(err.message, {\r\n          position: toast.POSITION.BOTTOM_CENTER\r\n        });\r\n      });;\r\n  }\r\n\r\n  const [selectedDateFrom, setSelectedDateFrom] = React.useState(new Date('2021-01-01'));\r\n  const [selectedDateTo, setSelectedDateTo] = React.useState(new Date('2021-12-31'));\r\n  const [state, setState] = React.useState(\"\");\r\n  const [start, setStart] = React.useState(\"\");\r\n  const [end, setEnd] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"\");\r\n\r\n\r\n  const handleDateChangeFrom = (event) => {\r\n    setStart(moment(event).format('YYYY-MM-DD').toString());\r\n    setSelectedDateFrom(event);\r\n  };\r\n\r\n  const handleDateChangeTo = (event) => {\r\n    setEnd(moment(event).format('YYYY-MM-DD').toString());\r\n    setSelectedDateTo(event);\r\n  };\r\n\r\n  const stateChange = (event) => {\r\n    setState(event.target.value);\r\n  };\r\n\r\n  const typeChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const filter = () => {\r\n    getMyRequestsByFilter(start, end, state, type).then(({ data }) => {\r\n      setRequests(data);\r\n    })\r\n      .catch((err) => {\r\n        toast.error(err.message, {\r\n          position: toast.POSITION.BOTTOM_CENTER\r\n        });\r\n      });;\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n\r\n      <div className='filterContainer'>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            style={{ width: '170px' }}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"From\"\r\n            value={selectedDateFrom}\r\n            onChange={handleDateChangeFrom}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            style={{ width: '170px', marginLeft: '20px' }}\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"dd/MM/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"To\"\r\n            value={selectedDateTo}\r\n            onChange={handleDateChangeTo}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        <InputLabel id=\"demo-simple-select-label\" style={{ margin: '30px', marginRight: '2px' }}>State:</InputLabel>\r\n        <Select\r\n          style={{ minWidth: '200px', margin: '32px', marginLeft: '5px' }}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={stateChange}>\r\n\r\n          <MenuItem value={1}>New</MenuItem>\r\n          <MenuItem value={2}>In progress</MenuItem>\r\n          <MenuItem value={3}>Approved</MenuItem>\r\n          <MenuItem value={4}>Rejected</MenuItem>\r\n          <MenuItem value=\"\"> All</MenuItem>\r\n        </Select>\r\n        <InputLabel id=\"demo-simple-select-label\" style={{ margin: '30px', marginRight: '2px' }}>Type:</InputLabel>\r\n        <Select\r\n          style={{ minWidth: '200px', margin: '32px', marginLeft: '5px' }}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={typeChange}>\r\n          <MenuItem value={1}>Administrative</MenuItem>\r\n          <MenuItem value={2}>Annual</MenuItem>\r\n          <MenuItem value={3}>Study</MenuItem>\r\n          <MenuItem value={4}>Sick</MenuItem>\r\n          <MenuItem value=\"\"> All</MenuItem>\r\n        </Select>\r\n\r\n        <Button onClick={() => filter()} style={{ margin: '15px', height: '40px', wight: '40px', color: '#05445E', background: '#189AB4' }}>Filter</Button>\r\n      </div>\r\n\r\n      <Paper className={classes.paper}\r\n        style={{ background: '#189AB4' }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={requests.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(requests, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((request, index) => {\r\n                  const isItemSelected = isSelected(request.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  let typeStr = \"\";\r\n\r\n                  if (request.type == 1)\r\n                    typeStr = 'Administrative'\r\n                  if (request.type == 2)\r\n                    typeStr = 'Annual'\r\n                  if (request.type == 3)\r\n                    typeStr = 'Study'\r\n                  if (request.type == 4)\r\n                    typeStr = 'Sick'\r\n\r\n                  let stateStr = \"\";\r\n\r\n                  if (request.state == 1)\r\n                    stateStr = 'New'\r\n                  if (request.state == 2)\r\n                    stateStr = 'In Progress'\r\n                  if (request.state == 3)\r\n                    stateStr = 'Approved'\r\n                  if (request.state == 4)\r\n                    stateStr = 'Rejected'\r\n\r\n                  return (\r\n\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, request.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={request.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n\r\n                      <TableCell align=\"center\">{stateStr}</TableCell>\r\n                      <TableCell align=\"center\" >{typeStr}</TableCell>\r\n                      <TableCell align=\"center\" ><Moment format=\"DD/MM/YYYY\">{request.startDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\"><Moment format=\"DD/MM/YYYY\">{request.endDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\" >{request.comment}</TableCell>\r\n                      <TableCell align=\"center\" ><div>{request.reviews.map((item) => {\r\n                        if (item.comment === null)\r\n                          return;\r\n                        else\r\n                          return <span>{item.comment + \". \"}</span>;\r\n                      })}</div></TableCell>\r\n                      <TableCell align=\"center\">\r\n                        { stateStr === 'New' || stateStr === 'In Progress' ? <Button\r\n                          onClick={() => action(request)}\r\n                          style={{ height: '20px', wight: '20px', color: '#05445E', textTransform: 'capitalize', backgroundColor:'#75E6DA', padding:'12px'}}\r\n                        >View</Button>: <div></div>}\r\n                        \r\n                        <Button\r\n                          onClick={() => remove(request)}\r\n                          style={{ float:'right', height: '20px', wight: '20px', color: '#D4F1F4', textTransform: 'capitalize', backgroundColor:'#05445E', padding:'12px'}}\r\n                        >Delete</Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows }}>\r\n\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={requests.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\View.js",["256","257","258"],"\r\n\r\nimport RequestView from '../components/RequestView';\r\nimport { useEffect, useState } from 'react';\r\nimport { getRequest } from '../axios';\r\n\r\nfunction View() {\r\n\r\n    return <div className='content'>\r\n        <div>\r\n            <RequestView />\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default View;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RequestView.js",["259","260","261","262","263","264"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ApprovedReviewsTable.js",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { getMyReviews } from '../axios';\r\nimport { actionReview } from '../axios';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Request number' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n  { id: 'state', numeric: false, disablePadding: false, label: 'State' },\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'start', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'end', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: '' }\r\n];\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ backgroundColor: '#189AB4', color: '#D4F1F4', fontWeight: 'bold' }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    (<div></div>)\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    width: '93%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  cell: {\r\n    backgroundcolor: 'red',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = reviews.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  let [reviews, setReviews] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    async function getAllData() {\r\n      await getMyReviews().then(({ data }) => {\r\n        setReviews(data);\r\n      });\r\n    }\r\n    getAllData();\r\n  }, []);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, reviews.length - page * rowsPerPage);\r\n\r\n  function action(review) {\r\n    review.isApproved = 'true';\r\n    actionReview(review);\r\n  }\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}\r\n        style={{ background: '#189AB4' }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n            style={{ background: '#D4F1F4' }}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={reviews.length}\r\n\r\n            />\r\n            <TableBody>\r\n              {stableSort(reviews, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((review, index) => {\r\n\r\n                  if (review.isApproved !== null && review.isApproved === true) {\r\n                    const isItemSelected = isSelected(review.id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    let typeStr = \"\";\r\n\r\n                    if (review.request.type == 1)\r\n                      typeStr = 'Administrative'\r\n                    if (review.request.type == 2)\r\n                      typeStr = 'Annual'\r\n                    if (review.request.type == 3)\r\n                      typeStr = 'Study'\r\n                    if (review.request.type == 4)\r\n                      typeStr = 'Sick'\r\n\r\n                    let statusStr = \"\";\r\n\r\n                    if (review.request.state == 1)\r\n                      statusStr = 'New'\r\n                    if (review.request.state == 2)\r\n                      statusStr = 'In progress'\r\n                    if (review.request.state == 3)\r\n                      statusStr = 'Approved'\r\n                    if (review.request.state == 4)\r\n                      statusStr = 'Rejected'\r\n\r\n\r\n\r\n                    return (\r\n\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, review.id)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={review.id}\r\n                        selected={isItemSelected}\r\n                      >\r\n\r\n                        <TableCell align=\"center\" component=\"th\" id={labelId} padding=\"none\">{review.id}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Tooltip title={review.request.user.phoneNumber} placement=\"top-end\" arrow>\r\n                            <Button>{review.request.user.lastName} {review.request.user.firstName}</Button>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{statusStr}</TableCell>\r\n                        <TableCell align=\"center\" >{typeStr}</TableCell>\r\n                        <TableCell align=\"center\" ><Moment format=\"DD/MM/YYYY\">{review.request.startDate}</Moment></TableCell>\r\n                        <TableCell align=\"center\"><Moment format=\"DD/MM/YYYY\">{review.request.endDate}</Moment></TableCell>\r\n                        <TableCell align=\"center\" >{review.request.comment}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows }}>\r\n\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={reviews.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RejectedReviewsTable.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { getMyReviews } from '../axios';\r\nimport { getMyApprovedReviews } from '../axios';\r\nimport { getMyRejectedReviews } from '../axios';\r\nimport { actionReview } from '../axios';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Request number' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n  { id: 'state', numeric: false, disablePadding: false, label: 'State' },\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'start', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'end', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: '' }\r\n];\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ backgroundColor: '#189AB4', color: '#D4F1F4', fontWeight: 'bold' }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    (<div></div>)\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    width: '93%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  cell: {\r\n    backgroundcolor: 'red',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = reviews.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  let [reviews, setReviews] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    async function getAllData() {\r\n      await getMyReviews().then(({ data }) => {\r\n        setReviews(data);\r\n      });\r\n    }\r\n    getAllData();\r\n  }, []);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, reviews.length - page * rowsPerPage);\r\n\r\n  function action(review) {\r\n    review.isApproved = 'true';\r\n    actionReview(review);\r\n  }\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}\r\n        style={{ background: '#189AB4' }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n            style={{ background: '#D4F1F4' }}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={reviews.length}\r\n\r\n            />\r\n            <TableBody>\r\n              {stableSort(reviews, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((review, index) => {\r\n\r\n                  if (review.isApproved !== null && review.isApproved === false) {\r\n                    const isItemSelected = isSelected(review.id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    let typeStr = \"\";\r\n\r\n                    if (review.request.type == 1)\r\n                      typeStr = 'Administrative'\r\n                    if (review.request.type == 2)\r\n                      typeStr = 'Annual'\r\n                    if (review.request.type == 3)\r\n                      typeStr = 'Study'\r\n                    if (review.request.type == 4)\r\n                      typeStr = 'Sick'\r\n\r\n                    let statusStr = \"\";\r\n\r\n                    if (review.request.state == 1)\r\n                      statusStr = 'New'\r\n                    if (review.request.state == 2)\r\n                      statusStr = 'In progress'\r\n                    if (review.request.state == 3)\r\n                      statusStr = 'Approved'\r\n                    if (review.request.state == 4)\r\n                      statusStr = 'Rejected'\r\n\r\n\r\n\r\n                    return (\r\n\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, review.id)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={review.id}\r\n                        selected={isItemSelected}\r\n                      >\r\n\r\n                        <TableCell align=\"center\" component=\"th\" id={labelId} padding=\"none\">{review.id}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Tooltip title={review.request.user.phoneNumber} placement=\"top-end\" arrow>\r\n                            <Button>{review.request.user.lastName} {review.request.user.firstName}</Button>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{statusStr}</TableCell>\r\n                        <TableCell align=\"center\" >{typeStr}</TableCell>\r\n                        <TableCell align=\"center\" ><Moment format=\"DD/MM/YYYY\">{review.request.startDate}</Moment></TableCell>\r\n                        <TableCell align=\"center\"><Moment format=\"DD/MM/YYYY\">{review.request.endDate}</Moment></TableCell>\r\n                        <TableCell align=\"center\" >{review.request.comment}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows }}>\r\n\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={reviews.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Admin.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\AdminTable.js",["303","304","305","306","307","308","309"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { getUsers } from '../axios';\r\nimport { getUsersByFilter } from '../axios';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport Select from '@material-ui/core/Select';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n    { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\r\n    { id: 'phone', numeric: false, disablePadding: false, label: 'Phone' },\r\n    { id: 'role', numeric: false, disablePadding: false, label: 'Role' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: '' }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={'center'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                        style={{ background: '#189AB4', color: '#D4F1F4', fontWeight: 'bold' }}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        (<div></div>)\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 'auto',\r\n        width: '93%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    cell: {\r\n        backgroundcolor: 'red',\r\n    },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [role, setRole] = React.useState(\"\");\r\n    const [name, setName] = React.useState(\"\");\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = users.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const roleFilterChange = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const nameChange = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const filter = () => {\r\n        getUsersByFilter(name, role).then(({ data }) => {\r\n            setUsers(data);\r\n        })\r\n            .catch((err) => {\r\n                toast.error(err.message, {\r\n                    position: toast.POSITION.BOTTOM_CENTER\r\n                });\r\n            });;\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    function edit(user) {\r\n        localStorage.setItem('employee', user.id);\r\n        history.replace('/userview');\r\n    }\r\n\r\n    let [users, setUsers] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function getAllData() {\r\n            await getUsers().then(({ data }) => {\r\n                setUsers(data);\r\n            });\r\n        }\r\n        getAllData();\r\n    }, []);\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, users.length - page * rowsPerPage);\r\n\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    return (<div>\r\n\r\n        <div className={classes.root}>\r\n            <div className='filterContainer'>\r\n                <InputLabel id=\"demo-simple-select-label\" style={{ margin: '30px', marginRight: '2px' }}>Role</InputLabel>\r\n                <Select\r\n                    style={{ minWidth: '200px', margin: '20px', marginLeft: '5px' }}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={role}\r\n                    onChange={roleFilterChange}>\r\n                    <MenuItem value=\"Manager\"> Manager</MenuItem>\r\n                    <MenuItem value=\"Employee\"> Employee</MenuItem>\r\n                    <MenuItem value=\"\"> All</MenuItem>\r\n                </Select>\r\n                <InputLabel id=\"demo-simple-select-label\" style={{ margin: '30px', marginRight: '2px' }}>Name</InputLabel>\r\n                <TextField id=\"standard-basic\" onChange={nameChange} value={name} style={{ minWidth: '200px', margin: '20px', marginLeft: '1px' }} />\r\n                <Button onClick={() => filter()} style={{ margin: '15px', height: '40px', wight: '40px', color: '#D4F1F4', background: '#189AB4' }}>Filter</Button>\r\n            </div>\r\n\r\n            <Paper className={classes.paper}\r\n                style={{ background: '#189AB4' }}>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                        aria-label=\"enhanced table\"\r\n                        style={{ background: '#189AB4' }}\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={users.length}\r\n\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(users, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((user, index) => {\r\n\r\n                                    const isItemSelected = isSelected(user.id);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, user.id)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={user.id}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell align=\"center\">{user.lastName} {user.firstName}</TableCell>\r\n                                            <TableCell align=\"center\">{user.email}</TableCell>\r\n                                            <TableCell align=\"center\">{user.phoneNumber}</TableCell>\r\n                                            <TableCell align=\"center\" >{user.role}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Button\r\n                                                    onClick={() => edit(user)}\r\n                                                    style={{ height: '20px', wight: '20px', color: '#D4F1F4', textTransform: 'capitalize', backgroundColor:'#05445E', padding:'12px'}}>Edit</Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows }}>\r\n\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={users.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\NewUser.js",["310","311","312","313","314","315","316","317","318","319","320","321","322"],"import { useEffect, useState } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport './../css/NewRequest.css';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getUsers } from '../axios';\r\nimport { getAllManagers } from '../axios';\r\nimport { postNewUser } from '../axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\n\r\nfunction NewRequest() {\r\n\r\n    let history = useHistory();\r\n\r\n    if (localStorage.getItem('role') !== \"Admin\")\r\n        history.replace('/login');\r\n\r\n    const roles = [\"Employee\", \"Manager\"];\r\n\r\n    let [users, setUsers] = useState(\"\");\r\n    let [firstName, setFirstName] = useState(\"\");\r\n    let [lastName, setLastName] = useState(\"\");\r\n    let [email, setEmail] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    let [phone, setPhone] = useState(\"\");\r\n    let [role, setRole] = useState(\"Employee\");\r\n    let [roleIndex, setRoleIndex] = useState();\r\n\r\n    useEffect(() => {\r\n        async function getAllData() {\r\n            await getUsers().then(({ data }) => {\r\n                setUsers(data);\r\n            });\r\n        }\r\n        getAllData();\r\n        \r\n    }, []);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n            maxWidth: 300,\r\n        },\r\n        chips: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        chip: {\r\n            margin: 2,\r\n        },\r\n        noLabel: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    }));\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n\r\n    const emailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    };\r\n\r\n    const lastNameChange = (event) => {\r\n        setLastName(event.target.value)\r\n    };\r\n\r\n    const firstNameChange = (event) => {\r\n        setFirstName(event.target.value)\r\n    };\r\n\r\n    const passwordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    };\r\n\r\n    const roleChange = (event) => {\r\n        event.target.value === 0 ? setRole(\"Employee\"):setRole(\"Manager\");\r\n    };\r\n\r\n    const phoneChange = (event) => {\r\n        setPhone(event.target.value)\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setPersonName(event.target.value);\r\n        setRole(event.target.value[0]);\r\n    };\r\n\r\n    function getStyles(name, roles, theme) {\r\n        return {\r\n            fontWeight:\r\n                role.indexOf(name) === -1\r\n                    ? theme.typography.fontWeightRegular\r\n                    : theme.typography.fontWeightMedium,\r\n        };\r\n    }\r\n    const [personName, setPersonName] = React.useState([]);\r\n    const classes = useStyles();\r\n    const theme = useTheme()\r\n\r\n    const sendRequest = () => {\r\n\r\n        let emailRegex = RegExp(/^([\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/);\r\n        let phoneRegex = RegExp(/\\+38\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}/);\r\n\r\n        if (!email.match(emailRegex)) {\r\n            toast.error(\"Email invalid!\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!phone.match(phoneRegex)) {\r\n            toast.error(\"Phone invalid!\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        postNewUser({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            password: password,\r\n            role: role,\r\n            phone: phone,\r\n        }).then(({ data }) => {\r\n            toast.success(\"User created\", {\r\n                position: toast.POSITION.BOTTOM_CENTER\r\n            });\r\n            history.push('/admin');\r\n        })\r\n            .catch((err) => {\r\n                toast.error(err.message, {\r\n                    position: toast.POSITION.BOTTOM_CENTER\r\n                });\r\n            });\r\n    };\r\n\r\n\r\n    return <div className='content'><Navbar></Navbar><div className='add-request'><div className='card'>\r\n        <TextField id=\"standard-basic\" label=\"FirstName\" onChange={firstNameChange} />\r\n        <TextField id=\"standard-basic\" label=\"LastName\" onChange={lastNameChange} />\r\n        <TextField id=\"standard-basic\" label=\"Email\" onChange={emailChange} />\r\n        <TextField id=\"standard-basic\" label=\"Password\" onChange={passwordChange} />\r\n        <TextField id=\"standard-basic\" label=\"Phone +38(000)000-00-00\" onChange={phoneChange} />\r\n        <InputLabel id=\"select-multiple-chip\" \r\n        style={{ margin: '25px'}}\r\n        >Choose a role:</InputLabel>\r\n        <Select\r\n                            value={roleIndex}\r\n                            defaultValue={0}\r\n                            onChange={roleChange}>\r\n                            {roles.map((obj, idx) => (\r\n                              <MenuItem key={`key-${idx}-name${obj}`} value={idx}>\r\n                                {obj}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"orange\"\r\n            style={{ margin: '15px', height: '40px', wight: '40px', color: '#D4F1F4', background: '#05445E',  marginTop: '25px'}}\r\n            className='login_btn'\r\n            onClick={sendRequest}>\r\n            Add\r\n          </Button>\r\n    </div></div></div>;\r\n}\r\n\r\nexport default NewRequest;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\UserView.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\UserEdit.js",["323","324","325","326"],"import React from 'react';\r\nimport { getUser } from '../axios';\r\nimport { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './../css/NewRequest.css';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { getAllManagers } from '../axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\nimport { UpdateUser } from '../axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './../css/NewRequest.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction RequestView() {\r\n  let history = useHistory();\r\n  let [user, setUser] = useState({});\r\n  let [firstName, setFirstName] = useState(\"\");\r\n  let [lastName, setLastName] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [phone, setPhone] = useState(\"\");\r\n  let [role, setRole] = useState(\"\");\r\n  const roles = [\"Employee\", \"Manager\"];\r\n\r\n  useEffect(() => {\r\n    async function getAllData() {\r\n      await getUser(localStorage.getItem('employee')).then(({ data }) => {\r\n        setUser(data);\r\n        setFirstName(data.firstName);\r\n        setLastName(data.lastName);\r\n        setEmail(data.email);\r\n        setPhone(data.phoneNumber);\r\n        setRole(data.role)\r\n      });\r\n    }\r\n    getAllData();\r\n  }, []);\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n\r\n\r\n  const emailChange = (event) => {\r\n    setEmail(event.target.value)\r\n  };\r\n\r\n  const lastNameChange = (event) => {\r\n    setLastName(event.target.value)\r\n  };\r\n\r\n  const firstNameChange = (event) => {\r\n    setFirstName(event.target.value)\r\n  };\r\n\r\n  const passwordChange = (event) => {\r\n    setPassword(event.target.value)\r\n  };\r\n\r\n  const phoneChange = (event) => {\r\n    setPhone(event.target.value)\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setRole(event.target.value[0]);\r\n    setPersonName(event.target.value);\r\n  };\r\n\r\n  //const back = () => {\r\n  //history.replace('/requests');\r\n  //};\r\n\r\n  const sendRequest = () => {\r\n\r\n    let newUser = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password,\r\n      role: role,\r\n      phoneNumber: phone,\r\n      id: user.id\r\n    };\r\n\r\n    UpdateUser(newUser).then(({ data }) => {\r\n      toast.success(\"User updated\", {\r\n        position: toast.POSITION.BOTTOM_CENTER\r\n      });\r\n    })\r\n      .catch((err) => {\r\n        toast.error(err.message, {\r\n          position: toast.POSITION.BOTTOM_CENTER\r\n        });\r\n      });;\r\n  };\r\n\r\n  const back = () => {\r\n    history.replace('/admin');\r\n  };\r\n\r\n\r\n  return <div>\r\n    <TextField id=\"standard-basic\" label=\"\" onChange={firstNameChange} value=\"User editing:\"\r\n      style={{ marginLeft: '55px', height: '40px', wight: '400px', marginTop:'50px' }} />\r\n    <div className='add-request'><div className='card'>\r\n      <TextField id=\"standard-basic\" label=\"\" onChange={firstNameChange} label={user.firstName}\r\n        style={{ margin: '15px', height: '40px', wight: '400px' }} />\r\n      <TextField id=\"standard-basic\" onChange={lastNameChange} label={user.lastName}\r\n        style={{ margin: '15px', height: '40px', wight: '400px' }} />\r\n      <TextField id=\"standard-basic\" label={user.email} onChange={emailChange}\r\n        style={{ margin: '15px', height: '40px', wight: '400px' }} />\r\n      <TextField id=\"standard-basic\" label={user.phoneNumber} onChange={phoneChange}\r\n        style={{ margin: '15px', height: '40px', wight: '400px' }} />\r\n      <Select\r\n        style={{ margin: '5px', height: '40px', wight: '400px' }}\r\n        labelId=\"demo-mutiple-chip-label\"\r\n        id=\"demo-mutiple-chip\"\r\n        multiple\r\n        value={personName}\r\n        onChange={handleChange}\r\n        input={<Input id=\"select-multiple-chip\" />}\r\n        renderValue={(selected) => (\r\n          <div className={classes.chips}>\r\n            {selected.map((value) => (\r\n              <Chip key={value} label={value} className={classes.chip} />\r\n            ))}\r\n          </div>\r\n        )}\r\n        MenuProps={MenuProps}>\r\n        {roles.map((name) => (\r\n          <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n            {name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <div className='containerBtn'>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"orange\"\r\n          style={{ margin: 'auto', marginTop: '20px', height: '40px', wight: '40px', color: '#E7DFDD', background: '#ec4c2c' }}\r\n          className='login_btn'\r\n          onClick={sendRequest}>\r\n          Update\r\n          </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"orange\"\r\n          style={{ margin: 'auto', marginTop: '20px', height: '40px', wight: '40px', color: '#E7DFDD', background: '#188a05' }}\r\n          className='login_btn'\r\n          onClick={back}>\r\n          To users\r\n          </Button></div>\r\n    </div></div></div>;\r\n};\r\n\r\nexport default RequestView;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\types.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\StatisticData.js",["327","328"],"\r\nimport Popup from 'reactjs-popup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useEffect, useState } from 'react';\r\nimport { getStatisticById } from '../axios';\r\nimport { getType } from '../types';\r\nimport './../css/Home.css';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport { countDays } from '../countDays';\r\nimport { InputLabel } from '@material-ui/core';\r\n\r\n\r\nfunction StatisticData(props) {\r\n\r\n    const [statistic, setStatistic] = useState([]);\r\n\r\n    let days = (new Date(props.request.endDate) - new Date(props.request.startDate)) / 86400000 + 1;\r\n\r\n\r\n    useEffect(() => {\r\n        async function getAllData() {\r\n            await getStatisticById(props.request.user.id).then(({ data }) => {\r\n                setStatistic(data);\r\n            });\r\n        }\r\n        getAllData();\r\n    }, []);\r\n\r\n    return <div><Popup\r\n        trigger={<Button style={{textTransform: 'capitalize'}}>days</Button>} position=\"right center\">\r\n        <div className='statContainer'>\r\n            <InputLabel style={{ minWidth: '120px', marginTop: '5px' }}>Current request:</InputLabel>\r\n            <InputLabel style={{ marginTop: '5px', marginLeft: '10px' }}>{getType(props.request.type)}</InputLabel>\r\n            <InputLabel style={{ marginTop: '5px', marginLeft: '10px' }}>{days}</InputLabel>\r\n            <InputLabel style={{ marginTop: '5px', marginBottom: '10px' }}>d.</InputLabel>\r\n\r\n        </div>\r\n        {statistic.map((item) =>\r\n            <div className='statContainer'>\r\n                <DateRangeIcon></DateRangeIcon>\r\n                <InputLabel style={{ minWidth: '120px', marginTop: '5px' }}>{getType(item.typeId)}</InputLabel>\r\n                <InputLabel style={{ marginTop: '5px', marginLeft: '5px' }}>used</InputLabel>\r\n                <InputLabel style={{ marginTop: '5px', marginLeft: '5px', color: \"#ec4c2c\" }}>{item.days}</InputLabel>\r\n                <InputLabel style={{ marginTop: '5px', marginLeft: '5px' }}>from</InputLabel>\r\n                <InputLabel style={{ marginTop: '5px', marginLeft: '5px' }}>{countDays(item.typeId)}</InputLabel>\r\n                <InputLabel style={{ marginTop: '5px' }}>, available</InputLabel>\r\n                <InputLabel style={{ marginTop: '5px', marginLeft: '5px', color: \"#188a05\" }}>{countDays(item.typeId) - item.days}</InputLabel>\r\n            </div>)}\r\n    </Popup></div>\r\n}\r\n\r\nexport default StatisticData;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\countDays.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Calendar.js",["329","330"],"\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './../css/Home.css';\r\n\r\n\r\nconst events = [\r\n  {\r\n    start: '2021-01-01',\r\n    end: '2021-10-02'\r\n  },\r\n  {\r\n    start: '2015-07-19',\r\n    end: '2015-07-25'\r\n  },\r\n];\r\n\r\n\r\nfunction UserCalendar() {\r\n\r\n  return (\r\n    <div>\r\n      <Calendar\r\n\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ReviewerName.js",[],{"ruleId":"331","severity":1,"message":"332","line":10,"column":7,"nodeType":"333","messageId":"334","endLine":10,"endColumn":19},{"ruleId":"331","severity":1,"message":"335","line":11,"column":7,"nodeType":"333","messageId":"334","endLine":11,"endColumn":13},{"ruleId":"331","severity":1,"message":"336","line":12,"column":7,"nodeType":"333","messageId":"334","endLine":12,"endColumn":11},{"ruleId":"331","severity":1,"message":"337","line":13,"column":7,"nodeType":"333","messageId":"334","endLine":13,"endColumn":16},{"ruleId":"331","severity":1,"message":"338","line":14,"column":7,"nodeType":"333","messageId":"334","endLine":14,"endColumn":15},{"ruleId":"339","severity":1,"message":"340","line":30,"column":13,"nodeType":"341","messageId":"342","endLine":30,"endColumn":89},{"ruleId":"331","severity":1,"message":"343","line":9,"column":9,"nodeType":"333","messageId":"334","endLine":9,"endColumn":16},{"ruleId":"339","severity":1,"message":"340","line":20,"column":5,"nodeType":"341","messageId":"342","endLine":20,"endColumn":104},{"ruleId":"344","severity":1,"message":"345","line":24,"column":9,"nodeType":"346","endLine":24,"endColumn":25},{"ruleId":"344","severity":1,"message":"345","line":25,"column":9,"nodeType":"346","endLine":25,"endColumn":42},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"331","severity":1,"message":"351","line":78,"column":9,"nodeType":"333","messageId":"334","endLine":78,"endColumn":29},{"ruleId":"347","replacedBy":"352"},{"ruleId":"349","replacedBy":"353"},{"ruleId":"331","severity":1,"message":"332","line":17,"column":7,"nodeType":"333","messageId":"334","endLine":17,"endColumn":19},{"ruleId":"331","severity":1,"message":"335","line":18,"column":7,"nodeType":"333","messageId":"334","endLine":18,"endColumn":13},{"ruleId":"331","severity":1,"message":"336","line":19,"column":7,"nodeType":"333","messageId":"334","endLine":19,"endColumn":11},{"ruleId":"331","severity":1,"message":"337","line":20,"column":7,"nodeType":"333","messageId":"334","endLine":20,"endColumn":16},{"ruleId":"331","severity":1,"message":"338","line":21,"column":7,"nodeType":"333","messageId":"334","endLine":21,"endColumn":15},{"ruleId":"331","severity":1,"message":"354","line":8,"column":18,"nodeType":"333","messageId":"334","endLine":8,"endColumn":25},{"ruleId":"339","severity":1,"message":"340","line":30,"column":9,"nodeType":"341","messageId":"342","endLine":30,"endColumn":83},{"ruleId":"331","severity":1,"message":"355","line":35,"column":8,"nodeType":"333","messageId":"334","endLine":35,"endColumn":18},{"ruleId":"356","severity":1,"message":"357","line":125,"column":27,"nodeType":"358","messageId":"359","endLine":125,"endColumn":29},{"ruleId":"356","severity":1,"message":"357","line":126,"column":25,"nodeType":"358","messageId":"359","endLine":126,"endColumn":27},{"ruleId":"331","severity":1,"message":"360","line":23,"column":12,"nodeType":"333","messageId":"334","endLine":23,"endColumn":18},{"ruleId":"331","severity":1,"message":"361","line":23,"column":20,"nodeType":"333","messageId":"334","endLine":23,"endColumn":29},{"ruleId":"339","severity":1,"message":"340","line":38,"column":5,"nodeType":"341","messageId":"342","endLine":38,"endColumn":111},{"ruleId":"331","severity":1,"message":"362","line":5,"column":10,"nodeType":"333","messageId":"334","endLine":5,"endColumn":19},{"ruleId":"331","severity":1,"message":"363","line":5,"column":21,"nodeType":"333","messageId":"334","endLine":5,"endColumn":29},{"ruleId":"331","severity":1,"message":"343","line":9,"column":9,"nodeType":"333","messageId":"334","endLine":9,"endColumn":16},{"ruleId":"344","severity":1,"message":"345","line":19,"column":9,"nodeType":"346","endLine":19,"endColumn":26},{"ruleId":"364","severity":1,"message":"365","line":17,"column":38,"nodeType":"366","messageId":"367","endLine":17,"endColumn":40},{"ruleId":"331","severity":1,"message":"368","line":79,"column":20,"nodeType":"333","messageId":"334","endLine":79,"endColumn":36},{"ruleId":"331","severity":1,"message":"369","line":79,"column":54,"nodeType":"333","messageId":"334","endLine":79,"endColumn":65},{"ruleId":"331","severity":1,"message":"370","line":79,"column":67,"nodeType":"333","messageId":"334","endLine":79,"endColumn":75},{"ruleId":"331","severity":1,"message":"371","line":149,"column":9,"nodeType":"333","messageId":"334","endLine":149,"endColumn":16},{"ruleId":"331","severity":1,"message":"369","line":150,"column":11,"nodeType":"333","messageId":"334","endLine":150,"endColumn":22},{"ruleId":"331","severity":1,"message":"372","line":243,"column":9,"nodeType":"333","messageId":"334","endLine":243,"endColumn":26},{"ruleId":"331","severity":1,"message":"343","line":279,"column":7,"nodeType":"333","messageId":"334","endLine":279,"endColumn":14},{"ruleId":"331","severity":1,"message":"373","line":288,"column":10,"nodeType":"333","messageId":"334","endLine":288,"endColumn":19},{"ruleId":"331","severity":1,"message":"374","line":288,"column":21,"nodeType":"333","messageId":"334","endLine":288,"endColumn":33},{"ruleId":"356","severity":1,"message":"375","line":414,"column":38,"nodeType":"358","messageId":"376","endLine":414,"endColumn":40},{"ruleId":"331","severity":1,"message":"377","line":418,"column":27,"nodeType":"333","messageId":"334","endLine":418,"endColumn":34},{"ruleId":"364","severity":1,"message":"365","line":422,"column":45,"nodeType":"366","messageId":"367","endLine":422,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":424,"column":45,"nodeType":"366","messageId":"367","endLine":424,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":426,"column":45,"nodeType":"366","messageId":"367","endLine":426,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":428,"column":45,"nodeType":"366","messageId":"367","endLine":428,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":433,"column":46,"nodeType":"366","messageId":"367","endLine":433,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":435,"column":46,"nodeType":"366","messageId":"367","endLine":435,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":437,"column":46,"nodeType":"366","messageId":"367","endLine":437,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":439,"column":46,"nodeType":"366","messageId":"367","endLine":439,"endColumn":48},{"ruleId":"331","severity":1,"message":"378","line":7,"column":12,"nodeType":"333","messageId":"334","endLine":7,"endColumn":16},{"ruleId":"331","severity":1,"message":"354","line":7,"column":18,"nodeType":"333","messageId":"334","endLine":7,"endColumn":25},{"ruleId":"331","severity":1,"message":"378","line":7,"column":12,"nodeType":"333","messageId":"334","endLine":7,"endColumn":16},{"ruleId":"331","severity":1,"message":"354","line":7,"column":18,"nodeType":"333","messageId":"334","endLine":7,"endColumn":25},{"ruleId":"331","severity":1,"message":"368","line":73,"column":20,"nodeType":"333","messageId":"334","endLine":73,"endColumn":36},{"ruleId":"331","severity":1,"message":"369","line":73,"column":54,"nodeType":"333","messageId":"334","endLine":73,"endColumn":65},{"ruleId":"331","severity":1,"message":"370","line":73,"column":67,"nodeType":"333","messageId":"334","endLine":73,"endColumn":75},{"ruleId":"331","severity":1,"message":"371","line":143,"column":9,"nodeType":"333","messageId":"334","endLine":143,"endColumn":16},{"ruleId":"331","severity":1,"message":"369","line":144,"column":11,"nodeType":"333","messageId":"334","endLine":144,"endColumn":22},{"ruleId":"331","severity":1,"message":"372","line":236,"column":9,"nodeType":"333","messageId":"334","endLine":236,"endColumn":26},{"ruleId":"331","severity":1,"message":"377","line":409,"column":25,"nodeType":"333","messageId":"334","endLine":409,"endColumn":32},{"ruleId":"364","severity":1,"message":"365","line":413,"column":36,"nodeType":"366","messageId":"367","endLine":413,"endColumn":38},{"ruleId":"364","severity":1,"message":"365","line":415,"column":36,"nodeType":"366","messageId":"367","endLine":415,"endColumn":38},{"ruleId":"364","severity":1,"message":"365","line":417,"column":36,"nodeType":"366","messageId":"367","endLine":417,"endColumn":38},{"ruleId":"364","severity":1,"message":"365","line":419,"column":36,"nodeType":"366","messageId":"367","endLine":419,"endColumn":38},{"ruleId":"364","severity":1,"message":"365","line":424,"column":37,"nodeType":"366","messageId":"367","endLine":424,"endColumn":39},{"ruleId":"364","severity":1,"message":"365","line":426,"column":37,"nodeType":"366","messageId":"367","endLine":426,"endColumn":39},{"ruleId":"364","severity":1,"message":"365","line":428,"column":37,"nodeType":"366","messageId":"367","endLine":428,"endColumn":39},{"ruleId":"364","severity":1,"message":"365","line":430,"column":37,"nodeType":"366","messageId":"367","endLine":430,"endColumn":39},{"ruleId":"356","severity":1,"message":"357","line":452,"column":27,"nodeType":"379","messageId":"380","endLine":452,"endColumn":34},{"ruleId":"331","severity":1,"message":"362","line":4,"column":10,"nodeType":"333","messageId":"334","endLine":4,"endColumn":19},{"ruleId":"331","severity":1,"message":"363","line":4,"column":21,"nodeType":"333","messageId":"334","endLine":4,"endColumn":29},{"ruleId":"331","severity":1,"message":"381","line":5,"column":10,"nodeType":"333","messageId":"334","endLine":5,"endColumn":20},{"ruleId":"331","severity":1,"message":"355","line":50,"column":8,"nodeType":"333","messageId":"334","endLine":50,"endColumn":18},{"ruleId":"331","severity":1,"message":"382","line":51,"column":8,"nodeType":"333","messageId":"334","endLine":51,"endColumn":14},{"ruleId":"331","severity":1,"message":"383","line":51,"column":16,"nodeType":"333","messageId":"334","endLine":51,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":68,"column":32,"nodeType":"358","messageId":"359","endLine":68,"endColumn":34},{"ruleId":"356","severity":1,"message":"357","line":159,"column":27,"nodeType":"358","messageId":"359","endLine":159,"endColumn":29},{"ruleId":"356","severity":1,"message":"357","line":160,"column":25,"nodeType":"358","messageId":"359","endLine":160,"endColumn":27},{"ruleId":"331","severity":1,"message":"368","line":64,"column":20,"nodeType":"333","messageId":"334","endLine":64,"endColumn":36},{"ruleId":"331","severity":1,"message":"369","line":64,"column":54,"nodeType":"333","messageId":"334","endLine":64,"endColumn":65},{"ruleId":"331","severity":1,"message":"370","line":64,"column":67,"nodeType":"333","messageId":"334","endLine":64,"endColumn":75},{"ruleId":"331","severity":1,"message":"371","line":134,"column":9,"nodeType":"333","messageId":"334","endLine":134,"endColumn":16},{"ruleId":"331","severity":1,"message":"369","line":135,"column":11,"nodeType":"333","messageId":"334","endLine":135,"endColumn":22},{"ruleId":"331","severity":1,"message":"372","line":227,"column":9,"nodeType":"333","messageId":"334","endLine":227,"endColumn":26},{"ruleId":"331","severity":1,"message":"384","line":247,"column":12,"nodeType":"333","messageId":"334","endLine":247,"endColumn":18},{"ruleId":"331","severity":1,"message":"343","line":252,"column":7,"nodeType":"333","messageId":"334","endLine":252,"endColumn":14},{"ruleId":"356","severity":1,"message":"375","line":281,"column":38,"nodeType":"358","messageId":"376","endLine":281,"endColumn":40},{"ruleId":"364","severity":1,"message":"365","line":289,"column":45,"nodeType":"366","messageId":"367","endLine":289,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":291,"column":45,"nodeType":"366","messageId":"367","endLine":291,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":293,"column":45,"nodeType":"366","messageId":"367","endLine":293,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":295,"column":45,"nodeType":"366","messageId":"367","endLine":295,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":300,"column":46,"nodeType":"366","messageId":"367","endLine":300,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":302,"column":46,"nodeType":"366","messageId":"367","endLine":302,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":304,"column":46,"nodeType":"366","messageId":"367","endLine":304,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":306,"column":46,"nodeType":"366","messageId":"367","endLine":306,"endColumn":48},{"ruleId":"331","severity":1,"message":"385","line":13,"column":8,"nodeType":"333","messageId":"334","endLine":13,"endColumn":24},{"ruleId":"331","severity":1,"message":"386","line":14,"column":8,"nodeType":"333","messageId":"334","endLine":14,"endColumn":14},{"ruleId":"331","severity":1,"message":"387","line":19,"column":10,"nodeType":"333","messageId":"334","endLine":19,"endColumn":30},{"ruleId":"331","severity":1,"message":"388","line":20,"column":10,"nodeType":"333","messageId":"334","endLine":20,"endColumn":30},{"ruleId":"331","severity":1,"message":"368","line":68,"column":20,"nodeType":"333","messageId":"334","endLine":68,"endColumn":36},{"ruleId":"331","severity":1,"message":"369","line":68,"column":54,"nodeType":"333","messageId":"334","endLine":68,"endColumn":65},{"ruleId":"331","severity":1,"message":"370","line":68,"column":67,"nodeType":"333","messageId":"334","endLine":68,"endColumn":75},{"ruleId":"331","severity":1,"message":"371","line":138,"column":9,"nodeType":"333","messageId":"334","endLine":138,"endColumn":16},{"ruleId":"331","severity":1,"message":"369","line":139,"column":11,"nodeType":"333","messageId":"334","endLine":139,"endColumn":22},{"ruleId":"331","severity":1,"message":"372","line":231,"column":9,"nodeType":"333","messageId":"334","endLine":231,"endColumn":26},{"ruleId":"331","severity":1,"message":"384","line":251,"column":12,"nodeType":"333","messageId":"334","endLine":251,"endColumn":18},{"ruleId":"331","severity":1,"message":"343","line":256,"column":7,"nodeType":"333","messageId":"334","endLine":256,"endColumn":14},{"ruleId":"356","severity":1,"message":"375","line":285,"column":38,"nodeType":"358","messageId":"376","endLine":285,"endColumn":40},{"ruleId":"364","severity":1,"message":"365","line":293,"column":45,"nodeType":"366","messageId":"367","endLine":293,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":295,"column":45,"nodeType":"366","messageId":"367","endLine":295,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":297,"column":45,"nodeType":"366","messageId":"367","endLine":297,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":299,"column":45,"nodeType":"366","messageId":"367","endLine":299,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":304,"column":46,"nodeType":"366","messageId":"367","endLine":304,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":306,"column":46,"nodeType":"366","messageId":"367","endLine":306,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":308,"column":46,"nodeType":"366","messageId":"367","endLine":308,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":310,"column":46,"nodeType":"366","messageId":"367","endLine":310,"endColumn":48},{"ruleId":"331","severity":1,"message":"368","line":65,"column":22,"nodeType":"333","messageId":"334","endLine":65,"endColumn":38},{"ruleId":"331","severity":1,"message":"369","line":65,"column":56,"nodeType":"333","messageId":"334","endLine":65,"endColumn":67},{"ruleId":"331","severity":1,"message":"370","line":65,"column":69,"nodeType":"333","messageId":"334","endLine":65,"endColumn":77},{"ruleId":"331","severity":1,"message":"371","line":131,"column":11,"nodeType":"333","messageId":"334","endLine":131,"endColumn":18},{"ruleId":"331","severity":1,"message":"369","line":132,"column":13,"nodeType":"333","messageId":"334","endLine":132,"endColumn":24},{"ruleId":"331","severity":1,"message":"372","line":227,"column":11,"nodeType":"333","messageId":"334","endLine":227,"endColumn":28},{"ruleId":"331","severity":1,"message":"377","line":322,"column":43,"nodeType":"333","messageId":"334","endLine":322,"endColumn":50},{"ruleId":"331","severity":1,"message":"389","line":6,"column":8,"nodeType":"333","messageId":"334","endLine":6,"endColumn":20},{"ruleId":"331","severity":1,"message":"390","line":8,"column":8,"nodeType":"333","messageId":"334","endLine":8,"endColumn":12},{"ruleId":"331","severity":1,"message":"391","line":10,"column":8,"nodeType":"333","messageId":"334","endLine":10,"endColumn":13},{"ruleId":"331","severity":1,"message":"392","line":16,"column":10,"nodeType":"333","messageId":"334","endLine":16,"endColumn":24},{"ruleId":"331","severity":1,"message":"393","line":33,"column":10,"nodeType":"333","messageId":"334","endLine":33,"endColumn":15},{"ruleId":"331","severity":1,"message":"394","line":40,"column":21,"nodeType":"333","messageId":"334","endLine":40,"endColumn":33},{"ruleId":"331","severity":1,"message":"395","line":72,"column":11,"nodeType":"333","messageId":"334","endLine":72,"endColumn":20},{"ruleId":"331","severity":1,"message":"396","line":106,"column":11,"nodeType":"333","messageId":"334","endLine":106,"endColumn":23},{"ruleId":"331","severity":1,"message":"397","line":111,"column":14,"nodeType":"333","messageId":"334","endLine":111,"endColumn":23},{"ruleId":"331","severity":1,"message":"398","line":119,"column":12,"nodeType":"333","messageId":"334","endLine":119,"endColumn":22},{"ruleId":"331","severity":1,"message":"371","line":120,"column":11,"nodeType":"333","messageId":"334","endLine":120,"endColumn":18},{"ruleId":"331","severity":1,"message":"399","line":121,"column":11,"nodeType":"333","messageId":"334","endLine":121,"endColumn":16},{"ruleId":"400","severity":1,"message":"401","line":125,"column":40,"nodeType":"402","messageId":"403","endLine":125,"endColumn":41,"suggestions":"404"},{"ruleId":"331","severity":1,"message":"392","line":11,"column":10,"nodeType":"333","messageId":"334","endLine":11,"endColumn":24},{"ruleId":"331","severity":1,"message":"405","line":13,"column":8,"nodeType":"333","messageId":"334","endLine":13,"endColumn":14},{"ruleId":"331","severity":1,"message":"406","line":104,"column":9,"nodeType":"333","messageId":"334","endLine":104,"endColumn":23},{"ruleId":"407","severity":1,"message":"408","line":154,"column":74,"nodeType":"409","endLine":154,"endColumn":96},{"ruleId":"331","severity":1,"message":"410","line":4,"column":8,"nodeType":"333","messageId":"334","endLine":4,"endColumn":17},{"ruleId":"411","severity":1,"message":"412","line":28,"column":8,"nodeType":"413","endLine":28,"endColumn":10,"suggestions":"414"},{"ruleId":"331","severity":1,"message":"360","line":8,"column":7,"nodeType":"333","messageId":"334","endLine":8,"endColumn":13},{"ruleId":"331","severity":1,"message":"415","line":20,"column":10,"nodeType":"333","messageId":"334","endLine":20,"endColumn":22},"no-unused-vars","'access_token' is assigned a value but never used.","Identifier","unusedVar","'userId' is assigned a value but never used.","'role' is assigned a value but never used.","'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["416"],"no-negated-in-lhs",["417"],"'handleChangeMultiple' is assigned a value but never used.",["416"],["417"],"'setName' is assigned a value but never used.","'reviwersId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'events' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleChangeDense' is assigned a value but never used.","'statistic' is assigned a value but never used.","'setStatistic' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'labelId' is assigned a value but never used.","'name' is assigned a value but never used.","ReturnStatement","expectedReturnValue","'getRequest' is defined but never used.","'typeId' is assigned a value but never used.","'setTypeId' is assigned a value but never used.","'action' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'getMyApprovedReviews' is defined but never used.","'getMyRejectedReviews' is defined but never used.","'Autocomplete' is defined but never used.","'Chip' is defined but never used.","'Input' is defined but never used.","'getAllManagers' is defined but never used.","'users' is assigned a value but never used.","'setRoleIndex' is assigned a value but never used.","'MenuProps' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'getStyles' is defined but never used.","'personName' is assigned a value but never used.","'theme' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["418","419"],"'moment' is defined but never used.","'passwordChange' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TextField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.request.user.id'. Either include it or remove the dependency array.","ArrayExpression",["420"],"'UserCalendar' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"421","fix":"422","desc":"423"},{"messageId":"424","fix":"425","desc":"426"},{"desc":"427","fix":"428"},"removeEscape",{"range":"429","text":"430"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"431","text":"432"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.request.user.id]",{"range":"433","text":"434"},[3561,3562],"",[3561,3561],"\\",[886,888],"[props.request.user.id]"]
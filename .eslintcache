[{"C:\\Users\\tsypa\\vacationsystem-ui\\src\\App.js":"1","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Login.js":"2","C:\\Users\\tsypa\\vacationsystem-ui\\src\\index.js":"3","C:\\Users\\tsypa\\vacationsystem-ui\\src\\reportWebVitals.js":"4","C:\\Users\\tsypa\\vacationsystem-ui\\src\\components\\Header.js":"5","C:\\Users\\tsypa\\vacationsystem-ui\\src\\components\\Navbar.js":"6","C:\\Users\\tsypa\\vacationsystem-ui\\src\\Context.js":"7","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\NewRequest.js":"8","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Requests.js":"9","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Reviews.js":"10","C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Home.js":"11","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\index.js":"12","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\App.js":"13","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\reportWebVitals.js":"14","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Reviews.js":"15","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Login.js":"16","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\NewRequest.js":"17","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Requests.js":"18","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Home.js":"19","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Header.js":"20","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Navbar.js":"21","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ReviewsTable.js":"22","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\axios.js":"23","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\axiosConfig.js":"24","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Approved.js":"25","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Rejected.js":"26","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RequestsTable.js":"27","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\View.js":"28","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RequestView.js":"29","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ApprovedReviewsTable.js":"30","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RejectedReviewsTable.js":"31"},{"size":1312,"mtime":1609604508402,"results":"32","hashOfConfig":"33"},{"size":2176,"mtime":1609604387597,"results":"34","hashOfConfig":"33"},{"size":500,"mtime":1609506889662,"results":"35","hashOfConfig":"33"},{"size":362,"mtime":1609506889662,"results":"36","hashOfConfig":"33"},{"size":910,"mtime":1609601283388,"results":"37","hashOfConfig":"33"},{"size":1627,"mtime":1609611313065,"results":"38","hashOfConfig":"33"},{"size":79,"mtime":1609601216906,"results":"39","hashOfConfig":"33"},{"size":4559,"mtime":1609611808473,"results":"40","hashOfConfig":"33"},{"size":179,"mtime":1609604053873,"results":"41","hashOfConfig":"33"},{"size":176,"mtime":1609604084072,"results":"42","hashOfConfig":"33"},{"size":214,"mtime":1609604538462,"results":"43","hashOfConfig":"33"},{"size":517,"mtime":1609613651013,"results":"44","hashOfConfig":"45"},{"size":1751,"mtime":1610883122766,"results":"46","hashOfConfig":"45"},{"size":375,"mtime":1609613651018,"results":"47","hashOfConfig":"45"},{"size":410,"mtime":1610832739354,"results":"48","hashOfConfig":"45"},{"size":2363,"mtime":1610925602149,"results":"49","hashOfConfig":"45"},{"size":7528,"mtime":1610998211680,"results":"50","hashOfConfig":"45"},{"size":260,"mtime":1610880025118,"results":"51","hashOfConfig":"45"},{"size":483,"mtime":1610031280065,"results":"52","hashOfConfig":"45"},{"size":1358,"mtime":1610925276247,"results":"53","hashOfConfig":"45"},{"size":5100,"mtime":1610912120601,"results":"54","hashOfConfig":"45"},{"size":13064,"mtime":1610922681742,"results":"55","hashOfConfig":"45"},{"size":1336,"mtime":1610907849913,"results":"56","hashOfConfig":"45"},{"size":328,"mtime":1609694693975,"results":"57","hashOfConfig":"45"},{"size":436,"mtime":1610909049303,"results":"58","hashOfConfig":"45"},{"size":431,"mtime":1610909197422,"results":"59","hashOfConfig":"45"},{"size":11775,"mtime":1610923292260,"results":"60","hashOfConfig":"45"},{"size":319,"mtime":1610898199840,"results":"61","hashOfConfig":"45"},{"size":7617,"mtime":1610925397147,"results":"62","hashOfConfig":"45"},{"size":11779,"mtime":1610911796011,"results":"63","hashOfConfig":"45"},{"size":11780,"mtime":1610911783756,"results":"64","hashOfConfig":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18mmd94",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"kmgz2e",{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},"C:\\Users\\tsypa\\vacationsystem-ui\\src\\App.js",["143","144","145","146","147"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Login.js",["148"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\index.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\reportWebVitals.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\components\\Header.js",["149","150","151","152"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\components\\Navbar.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\Context.js",[],["153","154"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\NewRequest.js",["155"],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Requests.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Reviews.js",[],"C:\\Users\\tsypa\\vacationsystem-ui\\src\\pages\\Home.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\index.js",[],["156","157"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\App.js",["158","159","160","161","162"],"import { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Login from './pages/Login';\r\nimport Home from './pages/Home';\r\nimport Requests from './pages/Requests';\r\nimport Reviews from './pages/Reviews';\r\nimport Approved from './pages/Approved';\r\nimport Rejected from './pages/Rejected';\r\nimport View from './pages/View';\r\nimport NewRequest from './pages/NewRequest';\r\nimport Header from './components/Header';\r\n\r\nconst access_token = localStorage.getItem('access_token');\r\nconst userId = localStorage.getItem('userId');\r\nconst role = localStorage.getItem('role');\r\nconst firstname = localStorage.getItem('firstname');\r\nconst lastname = localStorage.getItem('lastname');\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <Header/>\r\n      <BrowserRouter>\r\n      <Switch>\r\n            <Route path=\"/login\" exact>\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/newRequest\" exact>\r\n              <NewRequest />\r\n            </Route>\r\n            <Route path=\"/requests\" exact>\r\n              <Requests />\r\n            </Route>\r\n            <Route path=\"/reviews\" exact>\r\n              <Reviews />\r\n            </Route>\r\n            <Route path=\"/approved\" exact>\r\n              <Approved />\r\n            </Route>\r\n            <Route path=\"/rejected\" exact>\r\n              <Rejected />\r\n            </Route>\r\n            <Route path=\"/view\" exact>\r\n              <View />\r\n            </Route>\r\n            <Route path=\"/home\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"*\" exact>\r\n            <Redirect to=\"/login\" />\r\n          </Route> \r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\reportWebVitals.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Reviews.js",["163"],"import Navbar from '../components/Navbar';\r\nimport Table from '../components/ReviewsTable';\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\nfunction Reviews(){\r\n    const [name, setName] = useState('review');\r\n    return <div className='content'>\r\n            <Navbar></Navbar>\r\n            <div>\r\n                <Table name={name}/>        \r\n            </div>\r\n        </div>;\r\n}\r\n\r\nexport default Reviews;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Login.js",["164"],"\r\nimport React, { useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './../css/Login.css';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    let history = useHistory();\r\n\r\n    const sendForm = () => {\r\n\r\n        const url = 'https://localhost:44397/login';\r\n  \r\n        axios.post(url, { username: username, password: password })\r\n          .then((response) => {\r\n            const { data } = response;\r\n            localStorage.setItem('access_token', data.access_token);\r\n            localStorage.setItem('userId', data.userId);\r\n            localStorage.setItem('role', data.role);\r\n            localStorage.setItem('firstname', data.firstname);\r\n            localStorage.setItem('lastname', data.lastname);\r\n            {data.role === 'Admin' ? history.push('/admin') : history.push('/home')}           \r\n          })\r\n          .catch(\r\n            error => {\r\n              toast.error(error.message, {\r\n                position: toast.POSITION.BOTTOM_CENTER\r\n              });\r\n            }\r\n            );\r\n      };\r\n\r\n    return (<div className='form'>\r\n        <form noValidate autoComplete=\"off\" className=\"login_form\">\r\n            <PersonIcon \r\n            className='icon' color='#188a05'>               \r\n            </PersonIcon>\r\n            <TextField \r\n            label=\"Login\" \r\n            variant=\"outlined\" \r\n            className='form-input'\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}/>   \r\n            <br></br>\r\n            <TextField \r\n            type=\"password\"\r\n            label=\"Password\" \r\n            variant=\"outlined\"\r\n            className='form-input'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}/>\r\n            <br></br>\r\n            <Button \r\n            size=\"large\" \r\n            variant=\"contained\" \r\n            color=\"orange\" \r\n            className='login_btn'\r\n            onClick={sendForm}>\r\n                Login</Button>\r\n        </form>\r\n    </div>);\r\n}\r\n\r\nexport default Login;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\NewRequest.js",["165","166","167","168","169"],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Requests.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Home.js",["170","171","172"],"\r\nimport './../css/Home.css';\r\nimport React, { useState } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {getUserById} from '../axios';\r\n\r\n\r\nfunction Home() {\r\n\r\n    let history = useHistory();\r\n\r\n    {localStorage.getItem('role') === \"Accountant\" ? history.replace('/reviews'): history.replace('/home')}\r\n\r\n    return <div className='content'><Navbar></Navbar><div>Statistic:</div></div>;\r\n}\r\n\r\nexport default Home;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Header.js",["173","174","175","176"],"import './../css/Header.css';\r\nimport logo from './../logo.png';\r\nimport palm from './../palm.png';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect, useState} from 'react';\r\n\r\nfunction Header() {\r\n\r\n    let history = useHistory();\r\n    let [user, setUser] = useState();\r\n    \r\n    function LogOut () {\r\n        localStorage.clear();\r\n        window.location.href=('/');\r\n    };\r\n     \r\n    useEffect(() => {\r\n        async function getAllData() {\r\n            let name = \"\";\r\n            let firstname = localStorage.getItem('firstname');\r\n            let lasttname = localStorage.getItem('lastname');\r\n\r\n            {firstname !== null && firstname != null? name = firstname.charAt(0)+ lasttname.charAt(0): name=\"\"}\r\n            setUser(name);\r\n        }\r\n       getAllData();\r\n      }, []);\r\n\r\n    return <div className='header'>\r\n        <img src={logo}></img>\r\n        <img className='palm' src={palm}></img>\r\n        <div className='avatar'>\r\n            <Avatar \r\n            style={{margin:'15px', height:'40px', wight:'40px', color:'#E7DFDD', background:'#ec4c2c', fontSize:'30px', padding:'8px', fontFamily:'Comic Sans', fontstyle:'italic'}}\r\n            onClick={(LogOut)}>               \r\n                {user}\r\n            </Avatar></div>\r\n    </div>;\r\n}\r\n\r\nexport default Header;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\Navbar.js",["177"],"\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../css/Navbar.css';\r\nimport { Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport {getUserById} from '../axios';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\n\r\n\r\nfunction Navbar (){\r\n\r\n    let history = useHistory();\r\n\r\n    let role = localStorage.getItem('role');\r\n\r\n\r\n    if(role === \"Employee\")\r\n    {\r\n        return (<div className='navbar'>\r\n\r\n        <div><Button\r\n            className=\"requests_newreq-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '170px', minWidth: '140px', margin:'15px', border:'2px solid #188a05', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/newrequest');\r\n            }}>\r\n                <AddIcon></AddIcon>\r\n            Vacation\r\n        </Button>\r\n\r\n        <Button\r\n            className=\"my-requests-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #ec4c2c', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/requests');\r\n            }}>\r\n                <ListIcon></ListIcon>\r\n            Vacations\r\n        </Button>\r\n        </div>\r\n        \r\n        \r\n        </div>);\r\n    }\r\n    else if(role === \"Accountant\")\r\n    {\r\n        return (<div className='navbar'>\r\n\r\n        <div>\r\n            <Button\r\n            className=\"my-reviews-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #ec4c2c', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/reviews');\r\n            }}>\r\n                <ViewListIcon></ViewListIcon>\r\n            Reviews\r\n        </Button>\r\n        <Button\r\n            className=\"my-reviews-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #ec4c2c', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/approved');\r\n            }}>\r\n                <ViewListIcon></ViewListIcon>\r\n            Approved\r\n        </Button>\r\n        <Button\r\n            className=\"my-reviews-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #ec4c2c', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/rejected');\r\n            }}>\r\n                <ViewListIcon></ViewListIcon>\r\n            Rejected\r\n        </Button></div>\r\n        \r\n        \r\n        </div>);\r\n    }\r\n    else if(role === \"Manager\")\r\n    {\r\n        return (<div className='navbar'>\r\n\r\n<div><Button\r\n            className=\"requests_newreq-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #188a05', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/newrequest');\r\n            }}>\r\n                <AddIcon></AddIcon>\r\n            Vacation\r\n        </Button>\r\n\r\n        <Button\r\n            className=\"my-requests-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #188a05', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/requests');\r\n            }}>\r\n                <ListIcon></ListIcon>\r\n            Vacations\r\n        </Button>\r\n        </div>\r\n        <div>\r\n            <Button\r\n            className=\"my-reviews-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #ec4c2c', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/reviews');\r\n            }}>\r\n                <ViewListIcon></ViewListIcon>\r\n            Reviews\r\n        </Button>\r\n        <Button\r\n            className=\"my-reviews-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #ec4c2c', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/approved');\r\n            }}>\r\n                <ViewListIcon></ViewListIcon>\r\n            Approved\r\n        </Button>\r\n        <Button\r\n            className=\"my-reviews-btn\"\r\n            variant=\"outlined\"\r\n            style={{ height: '40px', width: '160px', minWidth: '140px', margin:'15px', border:'2px solid #ec4c2c', color:'#188a05' }}\r\n            onClick={() => {\r\n                history.replace('/rejected');\r\n            }}>\r\n                <ViewListIcon></ViewListIcon>\r\n            Rejected\r\n        </Button></div>\r\n        \r\n        </div>);\r\n    }\r\n    else if(role === \"Admin\")\r\n    {\r\n        return (<div className='navbar'>\r\n\r\n\r\n        \r\n        \r\n        </div>);\r\n    }\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default Navbar;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ReviewsTable.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button  from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport { useEffect, useState} from 'react';\r\nimport {getMyReviews} from '../axios';\r\nimport {getMyApprovedReviews} from '../axios';\r\nimport {getMyRejectedReviews} from '../axios';\r\nimport {actionReview} from '../axios';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Number' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name'},\r\n  { id: 'state', numeric: false, disablePadding: false, label: 'State'},\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'start', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'end', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n  { id: 'commentReviewer', numeric: false, disablePadding: false, label: 'Your comment' },\r\n  { id: 'action', numeric: false, disablePadding: false },\r\n];\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{background:'#ec4c2c', color:'#E7DFDD', fontWeight:'bold'}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    (<div></div>)\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin:'auto',\r\n    width: '93%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  cell:{\r\n    backgroundcolor:'red',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  let [comment, setComment] = useState(\"\");\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = reviews.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  let [reviews, setReviews] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    async function getAllData() { \r\n      await getMyReviews().then(({ data }) => {\r\n        setReviews(data);         \r\n        });\r\n    }\r\n   getAllData();\r\n  }, []);\r\n  \r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, reviews.length - page * rowsPerPage);\r\n\r\n  function action(review)\r\n  {\r\n      review.comment = comment;\r\n      review.isApproved = 'true';\r\n      actionReview(review);\r\n  }\r\n\r\n  function reject(review)\r\n  {\r\n      review.comment = comment;\r\n      review.isApproved = 'false';\r\n      actionReview(review);\r\n  }\r\n\r\n  const commentChange = (event) => {\r\n    setComment(event.target.value)\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}\r\n      style={{background:'#188a05'}}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n            style={{background:'#E7DFDD'}}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={reviews.length}\r\n              \r\n            />\r\n            <TableBody>\r\n              {stableSort(reviews, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((review, index) => {\r\n\r\n                  if(review.isApproved === null)\r\n                  {\r\n                  const isItemSelected = isSelected(review.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  let typeStr = \"\";\r\n                 \r\n                  if(review.request.type==1)\r\n                    typeStr = 'Administrative'\r\n                  if(review.request.type==2)\r\n                    typeStr = 'Annual'\r\n                  if(review.request.type==3)\r\n                    typeStr = 'Study'\r\n                  if(review.request.type==4)\r\n                    typeStr = 'Sick'\r\n\r\n                    let statusStr = \"\";\r\n                 \r\n                    if(review.request.state==1)\r\n                      statusStr = 'New'\r\n                    if(review.request.state==2)\r\n                      statusStr = 'In progress'\r\n                    if(review.request.state==3)\r\n                      statusStr = 'Approved'\r\n                    if(review.request.state==4)\r\n                      statusStr = 'Rejected'\r\n\r\n                    \r\n\r\n                  return (\r\n\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, review.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={review.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      \r\n                      <TableCell align=\"center\" component=\"th\" id={labelId}  padding=\"none\">{review.id}</TableCell>\r\n                      <TableCell align=\"center\">{review.request.user.lastName} {review.request.user.firstName}</TableCell>\r\n                      <TableCell align=\"center\">{statusStr}</TableCell>\r\n                      <TableCell align=\"center\" >{typeStr}</TableCell>\r\n                      <TableCell align=\"center\" ><Moment format=\"DD/MM/YYYY\">{review.request.startDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\"><Moment format=\"DD/MM/YYYY\">{review.request.endDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\" >{review.request.comment}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                      <Popup trigger={<Button>...</Button>} position=\"right center\">\r\n                        <div><TextField id=\"standard-basic\" onChange={commentChange} value={comment}/></div>\r\n                      </Popup>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                      <Button\r\n                        onClick={() => action(review)}\r\n                        style={{margin:'15px', height:'40px', wight:'40px', color:'#E7DFDD', background:'#188a05'}}\r\n                        >Approve</Button>\r\n                      <Button\r\n                        onClick={() => reject(review)}\r\n                        style={{margin:'15px', height:'40px', wight:'40px', color:'#E7DFDD', background:'#ec4c2c'}}\r\n                        >Reject</Button>\r\n                        </TableCell>                     \r\n                    </TableRow>\r\n                  );\r\n                  }})}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows}}>\r\n                  \r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={reviews.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\axios.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\axiosConfig.js",[],"C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Approved.js",["195","196"],"import Navbar from '../components/Navbar';\r\nimport ApprovedReviewsTable from '../components/ApprovedReviewsTable';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nfunction Approved(){\r\n    const [name, setName] = useState('approved');\r\n    return <div className='content'>\r\n            <Navbar></Navbar>\r\n            <div>\r\n            <ApprovedReviewsTable />         \r\n            </div>\r\n        </div>;\r\n}\r\n\r\nexport default Approved;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\Rejected.js",["197","198"],"import Navbar from '../components/Navbar';\r\nimport RejectedReviewsTable from '../components/RejectedReviewsTable';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nfunction Rejected(){\r\n    const [name, setName] = useState('rejected');\r\n    return <div className='content'>\r\n            <Navbar></Navbar>\r\n            <div>\r\n            <RejectedReviewsTable/>     \r\n            </div>\r\n        </div>;\r\n}\r\n\r\nexport default Rejected;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RequestsTable.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button  from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport { useEffect, useState} from 'react';\r\nimport {getMyRequests} from '../axios';\r\nimport {actionReview} from '../axios';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Number' },\r\n  { id: 'state', numeric: false, disablePadding: false, label: 'State'},\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'start', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'end', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n  { id: 'details', numeric: false, disablePadding: false, label: 'State details' },\r\n  { id: 'action', numeric: false, disablePadding: false },\r\n];\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{background:'#ec4c2c', color:'#E7DFDD', fontWeight:'bold'}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    (<div></div>)\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin:'auto',\r\n    width: '93%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  cell:{\r\n    backgroundcolor:'red',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = requests.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  let [requests, setRequests] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    async function getAllData() {\r\n      await getMyRequests().then(({ data }) => {\r\n        setRequests(data); \r\n\r\n        });\r\n    }\r\n   getAllData();\r\n  }, []);\r\n\r\n  \r\n  \r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, requests.length - page * rowsPerPage);\r\n  let history = useHistory();\r\n\r\n  function action(request)\r\n  {\r\n    localStorage.setItem('request', request.id);\r\n    history.replace('/view');\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}\r\n      style={{background:'#188a05'}}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n            style={{background:'#E7DFDD'}}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={requests.length}\r\n              \r\n            />\r\n            <TableBody>\r\n              {stableSort(requests, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((request, index) => {\r\n                  const isItemSelected = isSelected(request.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  let typeStr = \"\";\r\n                 \r\n                  if(request.type==1)\r\n                    typeStr = 'Administrative'\r\n                  if(request.type==2)\r\n                    typeStr = 'Annual'\r\n                  if(request.type==3)\r\n                    typeStr = 'Study'\r\n                  if(request.type==4)\r\n                    typeStr = 'Sick'\r\n\r\n                    let stateStr = \"\";\r\n                 \r\n                  if(request.state==1)\r\n                    stateStr = 'New'\r\n                  if(request.state==2)\r\n                    stateStr = 'In Progress'\r\n                  if(request.state==3)\r\n                    stateStr = 'Approved'\r\n                  if(request.state==4)\r\n                    stateStr = 'Rejected'\r\n\r\n                  return (\r\n\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, request.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={request.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      \r\n                      <TableCell align=\"center\" component=\"th\" id={labelId}  padding=\"none\">{request.id}</TableCell>\r\n                      <TableCell align=\"center\">{stateStr}</TableCell>\r\n                      <TableCell align=\"center\" >{typeStr}</TableCell>\r\n                      <TableCell align=\"center\" ><Moment format=\"DD/MM/YYYY\">{request.startDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\"><Moment format=\"DD/MM/YYYY\">{request.endDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\" >{request.comment}</TableCell>\r\n                      <TableCell align=\"center\" >{request.reviews.map((item)=>{\r\n                        return item.comment;\r\n                      })}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Button\r\n                        onClick={() => action(request)}\r\n                        style={{margin:'15px', height:'40px', wight:'40px', color:'#E7DFDD', background:'#188a05'}}\r\n                        >View</Button>\r\n                        </TableCell>                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows}}>\r\n                  \r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={requests.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\pages\\View.js",["213","214","215"],"\r\n\r\nimport RequestView from '../components/RequestView';\r\nimport { useEffect, useState} from 'react';\r\nimport {getRequest} from '../axios';\r\n\r\nfunction View(){\r\n\r\n    return <div className='content'>\r\n            <div>\r\n            <RequestView/>         \r\n            </div>\r\n        </div>;\r\n}\r\n\r\nexport default View;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RequestView.js",["216","217","218"],"import React from 'react';\r\nimport {getRequest} from '../axios';\r\nimport { useEffect, useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport './../css/NewRequest.css';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {getAllManagers} from '../axios';\r\nimport Button  from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\nimport {updateRequest} from '../axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './../css/NewRequest.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nfunction RequestView()\r\n{\r\n    let history = useHistory();\r\n    let [request, setRequest] = useState({});\r\n    let [type, setType] = useState(\"\");\r\n    let [start, setStart] = useState(\"\");\r\n    let [end, setEnd] = useState(\"\");\r\n    let [comment, setComment] = useState(\"\");\r\n    const [personName, setPersonName] = React.useState([]);\r\n    let [dataManagers, setDataManagers] = useState([]);\r\n    let [dataId, setDataId] = useState([]);\r\n    let [reviwersId, setReviwersId] = useState([]);\r\n\r\n    \r\n\r\n    const vacation = [\r\n        { title: 'Administrative' },\r\n        { title: 'Annual' },\r\n        { title: 'Study' },\r\n        { title: 'Sick' }];\r\n\r\n    useEffect(() => {\r\n        async function getAllData() {\r\n          await getRequest(localStorage.getItem('request')).then(({ data }) => {\r\n            setRequest(data);\r\n\r\n            });\r\n        }\r\n       getAllData();\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        async function getAllData() {\r\n          await getAllManagers().then(({ data }) => {\r\n              setDataId(data);\r\n              let arr = data;\r\n              let reviewers = arr.map((item) => {\r\n              return item.firstName.concat(' ', item.lastName);             \r\n            });\r\n            \r\n            setDataManagers(reviewers);\r\n            \r\n\r\n\r\n          });\r\n        }\r\n        getAllData();\r\n      }, []);\r\n\r\n      const ITEM_HEIGHT = 48;\r\n      const ITEM_PADDING_TOP = 8;\r\n      const MenuProps = {\r\n        PaperProps: {\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n          },\r\n        },\r\n      };\r\n\r\n      function getStyles(name, personName, theme) {\r\n        return {\r\n          fontWeight:\r\n            personName.indexOf(name) === -1\r\n              ? theme.typography.fontWeightRegular\r\n              : theme.typography.fontWeightMedium,\r\n        };\r\n      }\r\n      \r\n        const classes = useStyles();\r\n        const theme = useTheme()\r\n      \r\n\r\n      const endDateChange = (event) => {\r\n        setEnd(event.target.value)\r\n      };\r\n    \r\n      const startDateChange = (event) => {\r\n        setStart(event.target.value)\r\n      };\r\n\r\n      const commentChange = (event) => {\r\n        setComment(event.target.value)\r\n      };\r\n\r\n      const autocompleteChange = (event) => {\r\n        setType(event.target.innerText)\r\n      };\r\n\r\n      const handleChange = (event) => {\r\n        setPersonName(event.target.value);\r\n      };\r\n\r\n      const back =() =>{\r\n        history.replace('/requests');\r\n      };\r\n      \r\n      const sendRequest = ()=>{\r\n\r\n        let ids = [];\r\n        ids.push('498f801b-3af8-4795-a6cc-69a25588c8cb');\r\n  \r\n        personName.map((item)=>{\r\n          dataId.map((user) =>{\r\n            if(user.firstName.concat(' ', user.lastName) === item)\r\n            {ids.push(user.id)}\r\n          });\r\n        });\r\n  \r\n        setReviwersId(ids);\r\n  \r\n        if(type === 'Administrative')\r\n          type = 1\r\n        else if(type === 'Annual')\r\n          type = 2\r\n        else if(type === 'Study')\r\n          type = 3\r\n        else if(type === 'Sick')\r\n          type = 4\r\n  \r\n        let newRequest = {\r\n            leaveType:type,\r\n            startDate: moment(start).format('YYYY-MM-DD').toString(),\r\n            endDate: moment(end).format('YYYY-MM-DD').toString(),\r\n            reviewsId: ids,\r\n            comment:comment,\r\n            userId: localStorage.getItem('userId')};\r\n\r\n        updateRequest(request.id, newRequest);\r\n      };\r\n\r\n\r\n    return <div><div className='add-request'><div className='card'>\r\n        \r\n       \r\n\r\n        <Autocomplete id=\"combo-box-demo\" onChange={autocompleteChange}\r\n            options={vacation}\r\n            //defaultValue = { vacation[request.type] }\r\n            getOptionLabel={(option) => option.title}\r\n            style={{ width: 350, margin:'15px', height:'30px'}}\r\n            renderInput={(params) => <TextField {...params} label=\"Vacation type\" variant=\"outlined\" />}/>\r\n    \r\n        <div className='dates'>\r\n          <TextField id=\"date\" className='date' label=\"Start date\" type=\"date\"\r\n        value={moment(request.startDate).format('YYYY-MM-DD').toString()} onChange={startDateChange}\r\n        style={{margin:'15px', color:'#ec4c2c'}}\r\n        InputLabelProps={{shrink: true,}}/>\r\n          <TextField id=\"date\" className='date' label=\"End date\" type=\"date\"\r\n        value={moment(request.endDate).format('YYYY-MM-DD').toString()} onChange={endDateChange}\r\n        style={{margin:'15px'}}\r\n        InputLabelProps={{shrink: true,}}/>\r\n        </div>\r\n\r\n        <TextField id=\"standard-basic\" onChange={commentChange} value={request.comment}/> \r\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Reviewers:</InputLabel>\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\">1. Accounting department</InputLabel>\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Managers:</InputLabel>\r\n\r\n        <Select\r\n          style={{margin:'15px', height:'40px', wight:'400px'}}\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          id=\"demo-mutiple-chip\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}>\r\n          {dataManagers.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n          </Select>\r\n            <div className='containerBtn'>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"orange\" \r\n            style={{margin:'auto', marginTop:'20px', height:'40px', wight:'40px', color:'#E7DFDD', background:'#ec4c2c'}}\r\n            className='login_btn'\r\n            onClick={sendRequest}>\r\n            Change\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"orange\" \r\n            style={{margin:'auto', marginTop:'20px', height:'40px', wight:'40px', color:'#E7DFDD', background:'#188a05'}}\r\n            className='login_btn'\r\n            onClick={back}>\r\n            Cancel\r\n          </Button>\r\n          </div>\r\n    </div>\r\n    </div></div>;\r\n};\r\n\r\nexport default RequestView;","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\ApprovedReviewsTable.js",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button  from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport { useEffect, useState} from 'react';\r\nimport {getMyReviews} from '../axios';\r\nimport {getMyApprovedReviews} from '../axios';\r\nimport {getMyRejectedReviews} from '../axios';\r\nimport {actionReview} from '../axios';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Number' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name'},\r\n  { id: 'state', numeric: false, disablePadding: false, label: 'State'},\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'start', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'end', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: '' }\r\n];\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{background:'#ec4c2c', color:'#E7DFDD', fontWeight:'bold'}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    (<div></div>)\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin:'auto',\r\n    width: '93%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  cell:{\r\n    backgroundcolor:'red',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = reviews.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  let [reviews, setReviews] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    async function getAllData() { \r\n      await getMyReviews().then(({ data }) => {\r\n        setReviews(data);         \r\n        });\r\n    }\r\n   getAllData();\r\n  }, []);\r\n  \r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, reviews.length - page * rowsPerPage);\r\n\r\n  function action(review)\r\n  {\r\n      review.isApproved = 'true';\r\n      actionReview(review);\r\n  }\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}\r\n      style={{background:'#188a05'}}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n            style={{background:'#E7DFDD'}}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={reviews.length}\r\n              \r\n            />\r\n            <TableBody>\r\n              {stableSort(reviews, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((review, index) => {\r\n\r\n                  if(review.isApproved !== null && review.isApproved === true)\r\n                  {\r\n                  const isItemSelected = isSelected(review.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  let typeStr = \"\";\r\n                 \r\n                  if(review.request.type==1)\r\n                    typeStr = 'Administrative'\r\n                  if(review.request.type==2)\r\n                    typeStr = 'Annual'\r\n                  if(review.request.type==3)\r\n                    typeStr = 'Study'\r\n                  if(review.request.type==4)\r\n                    typeStr = 'Sick'\r\n\r\n                    let statusStr = \"\";\r\n                 \r\n                    if(review.request.state==1)\r\n                      statusStr = 'New'\r\n                    if(review.request.state==2)\r\n                      statusStr = 'In progress'\r\n                    if(review.request.state==3)\r\n                      statusStr = 'Approved'\r\n                    if(review.request.state==4)\r\n                      statusStr = 'Rejected'\r\n\r\n                    \r\n\r\n                  return (\r\n\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, review.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={review.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      \r\n                      <TableCell align=\"center\" component=\"th\" id={labelId}  padding=\"none\">{review.id}</TableCell>\r\n                      <TableCell align=\"center\">{review.request.user.lastName} {review.request.user.firstName}</TableCell>\r\n                      <TableCell align=\"center\">{statusStr}</TableCell>\r\n                      <TableCell align=\"center\" >{typeStr}</TableCell>\r\n                      <TableCell align=\"center\" ><Moment format=\"DD/MM/YYYY\">{review.request.startDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\"><Moment format=\"DD/MM/YYYY\">{review.request.endDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\" >{review.request.comment}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        </TableCell>                     \r\n                    </TableRow>\r\n                  );\r\n                  }})}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows}}>\r\n                  \r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={reviews.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\tsypa\\source\\repos\\Diplom\\02012021\\VacationSystem.UI\\src\\components\\RejectedReviewsTable.js",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button  from '@material-ui/core/Button';\r\nimport '../css/Table.css';\r\nimport { useEffect, useState} from 'react';\r\nimport {getMyReviews} from '../axios';\r\nimport {getMyApprovedReviews} from '../axios';\r\nimport {getMyRejectedReviews} from '../axios';\r\nimport {actionReview} from '../axios';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Number' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Name'},\r\n  { id: 'state', numeric: false, disablePadding: false, label: 'State'},\r\n  { id: 'type', numeric: false, disablePadding: false, label: 'Type' },\r\n  { id: 'start', numeric: false, disablePadding: false, label: 'Start date' },\r\n  { id: 'end', numeric: false, disablePadding: false, label: 'End date' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n  { id: 'comment', numeric: false, disablePadding: false, label: '' }\r\n];\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{background:'#ec4c2c', color:'#E7DFDD', fontWeight:'bold'}}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    (<div></div>)\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin:'auto',\r\n    width: '93%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  cell:{\r\n    backgroundcolor:'red',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = reviews.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  let [reviews, setReviews] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    async function getAllData() { \r\n      await getMyReviews().then(({ data }) => {\r\n        setReviews(data);         \r\n        });\r\n    }\r\n   getAllData();\r\n  }, []);\r\n  \r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, reviews.length - page * rowsPerPage);\r\n\r\n  function action(review)\r\n  {\r\n      review.isApproved = 'true';\r\n      actionReview(review);\r\n  }\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}\r\n      style={{background:'#188a05'}}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n            style={{background:'#E7DFDD'}}\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={reviews.length}\r\n              \r\n            />\r\n            <TableBody>\r\n              {stableSort(reviews, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((review, index) => {\r\n\r\n                  if(review.isApproved !== null && review.isApproved === false)\r\n                  {\r\n                  const isItemSelected = isSelected(review.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  let typeStr = \"\";\r\n                 \r\n                  if(review.request.type==1)\r\n                    typeStr = 'Administrative'\r\n                  if(review.request.type==2)\r\n                    typeStr = 'Annual'\r\n                  if(review.request.type==3)\r\n                    typeStr = 'Study'\r\n                  if(review.request.type==4)\r\n                    typeStr = 'Sick'\r\n\r\n                    let statusStr = \"\";\r\n                 \r\n                    if(review.request.state==1)\r\n                      statusStr = 'New'\r\n                    if(review.request.state==2)\r\n                      statusStr = 'In progress'\r\n                    if(review.request.state==3)\r\n                      statusStr = 'Approved'\r\n                    if(review.request.state==4)\r\n                      statusStr = 'Rejected'\r\n\r\n                    \r\n\r\n                  return (\r\n\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, review.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={review.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      \r\n                      <TableCell align=\"center\" component=\"th\" id={labelId}  padding=\"none\">{review.id}</TableCell>\r\n                      <TableCell align=\"center\">{review.request.user.lastName} {review.request.user.firstName}</TableCell>\r\n                      <TableCell align=\"center\">{statusStr}</TableCell>\r\n                      <TableCell align=\"center\" >{typeStr}</TableCell>\r\n                      <TableCell align=\"center\" ><Moment format=\"DD/MM/YYYY\">{review.request.startDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\"><Moment format=\"DD/MM/YYYY\">{review.request.endDate}</Moment></TableCell>\r\n                      <TableCell align=\"center\" >{review.request.comment}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        </TableCell>                     \r\n                    </TableRow>\r\n                  );\r\n                  }})}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 13 : 53) * emptyRows}}>\r\n                  \r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={reviews.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n",{"ruleId":"257","severity":1,"message":"258","line":10,"column":7,"nodeType":"259","messageId":"260","endLine":10,"endColumn":19},{"ruleId":"257","severity":1,"message":"261","line":11,"column":7,"nodeType":"259","messageId":"260","endLine":11,"endColumn":13},{"ruleId":"257","severity":1,"message":"262","line":12,"column":7,"nodeType":"259","messageId":"260","endLine":12,"endColumn":11},{"ruleId":"257","severity":1,"message":"263","line":13,"column":7,"nodeType":"259","messageId":"260","endLine":13,"endColumn":16},{"ruleId":"257","severity":1,"message":"264","line":14,"column":7,"nodeType":"259","messageId":"260","endLine":14,"endColumn":15},{"ruleId":"265","severity":1,"message":"266","line":30,"column":13,"nodeType":"267","messageId":"268","endLine":30,"endColumn":89},{"ruleId":"257","severity":1,"message":"269","line":9,"column":9,"nodeType":"259","messageId":"260","endLine":9,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":20,"column":5,"nodeType":"267","messageId":"268","endLine":20,"endColumn":104},{"ruleId":"270","severity":1,"message":"271","line":24,"column":9,"nodeType":"272","endLine":24,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":25,"column":9,"nodeType":"272","endLine":25,"endColumn":42},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"257","severity":1,"message":"277","line":78,"column":9,"nodeType":"259","messageId":"260","endLine":78,"endColumn":29},{"ruleId":"273","replacedBy":"278"},{"ruleId":"275","replacedBy":"279"},{"ruleId":"257","severity":1,"message":"258","line":13,"column":7,"nodeType":"259","messageId":"260","endLine":13,"endColumn":19},{"ruleId":"257","severity":1,"message":"261","line":14,"column":7,"nodeType":"259","messageId":"260","endLine":14,"endColumn":13},{"ruleId":"257","severity":1,"message":"262","line":15,"column":7,"nodeType":"259","messageId":"260","endLine":15,"endColumn":11},{"ruleId":"257","severity":1,"message":"263","line":16,"column":7,"nodeType":"259","messageId":"260","endLine":16,"endColumn":16},{"ruleId":"257","severity":1,"message":"264","line":17,"column":7,"nodeType":"259","messageId":"260","endLine":17,"endColumn":15},{"ruleId":"257","severity":1,"message":"280","line":8,"column":18,"nodeType":"259","messageId":"260","endLine":8,"endColumn":25},{"ruleId":"265","severity":1,"message":"266","line":30,"column":13,"nodeType":"267","messageId":"268","endLine":30,"endColumn":85},{"ruleId":"257","severity":1,"message":"281","line":15,"column":9,"nodeType":"259","messageId":"260","endLine":15,"endColumn":20},{"ruleId":"257","severity":1,"message":"269","line":32,"column":7,"nodeType":"259","messageId":"260","endLine":32,"endColumn":14},{"ruleId":"257","severity":1,"message":"282","line":36,"column":8,"nodeType":"259","messageId":"260","endLine":36,"endColumn":18},{"ruleId":"283","severity":1,"message":"284","line":125,"column":28,"nodeType":"285","messageId":"286","endLine":125,"endColumn":30},{"ruleId":"283","severity":1,"message":"284","line":126,"column":27,"nodeType":"285","messageId":"286","endLine":126,"endColumn":29},{"ruleId":"257","severity":1,"message":"287","line":3,"column":17,"nodeType":"259","messageId":"260","endLine":3,"endColumn":25},{"ruleId":"257","severity":1,"message":"281","line":6,"column":9,"nodeType":"259","messageId":"260","endLine":6,"endColumn":20},{"ruleId":"265","severity":1,"message":"266","line":13,"column":5,"nodeType":"267","messageId":"268","endLine":13,"endColumn":108},{"ruleId":"257","severity":1,"message":"269","line":10,"column":9,"nodeType":"259","messageId":"260","endLine":10,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":24,"column":13,"nodeType":"267","messageId":"268","endLine":24,"endColumn":112},{"ruleId":"270","severity":1,"message":"271","line":31,"column":9,"nodeType":"272","endLine":31,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":32,"column":9,"nodeType":"272","endLine":32,"endColumn":42},{"ruleId":"257","severity":1,"message":"281","line":7,"column":9,"nodeType":"259","messageId":"260","endLine":7,"endColumn":20},{"ruleId":"257","severity":1,"message":"288","line":19,"column":9,"nodeType":"259","messageId":"260","endLine":19,"endColumn":29},{"ruleId":"257","severity":1,"message":"289","line":20,"column":9,"nodeType":"259","messageId":"260","endLine":20,"endColumn":29},{"ruleId":"257","severity":1,"message":"290","line":71,"column":20,"nodeType":"259","messageId":"260","endLine":71,"endColumn":36},{"ruleId":"257","severity":1,"message":"291","line":71,"column":54,"nodeType":"259","messageId":"260","endLine":71,"endColumn":65},{"ruleId":"257","severity":1,"message":"292","line":71,"column":67,"nodeType":"259","messageId":"260","endLine":71,"endColumn":75},{"ruleId":"257","severity":1,"message":"293","line":141,"column":9,"nodeType":"259","messageId":"260","endLine":141,"endColumn":16},{"ruleId":"257","severity":1,"message":"291","line":142,"column":11,"nodeType":"259","messageId":"260","endLine":142,"endColumn":22},{"ruleId":"257","severity":1,"message":"269","line":273,"column":7,"nodeType":"259","messageId":"260","endLine":273,"endColumn":14},{"ruleId":"283","severity":1,"message":"294","line":302,"column":38,"nodeType":"285","messageId":"295","endLine":302,"endColumn":40},{"ruleId":"296","severity":1,"message":"297","line":311,"column":41,"nodeType":"298","messageId":"299","endLine":311,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":313,"column":41,"nodeType":"298","messageId":"299","endLine":313,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":315,"column":41,"nodeType":"298","messageId":"299","endLine":315,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":317,"column":41,"nodeType":"298","messageId":"299","endLine":317,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":322,"column":44,"nodeType":"298","messageId":"299","endLine":322,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":324,"column":44,"nodeType":"298","messageId":"299","endLine":324,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":326,"column":44,"nodeType":"298","messageId":"299","endLine":326,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":328,"column":44,"nodeType":"298","messageId":"299","endLine":328,"endColumn":46},{"ruleId":"257","severity":1,"message":"300","line":7,"column":12,"nodeType":"259","messageId":"260","endLine":7,"endColumn":16},{"ruleId":"257","severity":1,"message":"280","line":7,"column":18,"nodeType":"259","messageId":"260","endLine":7,"endColumn":25},{"ruleId":"257","severity":1,"message":"300","line":7,"column":12,"nodeType":"259","messageId":"260","endLine":7,"endColumn":16},{"ruleId":"257","severity":1,"message":"280","line":7,"column":18,"nodeType":"259","messageId":"260","endLine":7,"endColumn":25},{"ruleId":"257","severity":1,"message":"301","line":19,"column":9,"nodeType":"259","messageId":"260","endLine":19,"endColumn":21},{"ruleId":"257","severity":1,"message":"290","line":65,"column":20,"nodeType":"259","messageId":"260","endLine":65,"endColumn":36},{"ruleId":"257","severity":1,"message":"291","line":65,"column":54,"nodeType":"259","messageId":"260","endLine":65,"endColumn":65},{"ruleId":"257","severity":1,"message":"292","line":65,"column":67,"nodeType":"259","messageId":"260","endLine":65,"endColumn":75},{"ruleId":"257","severity":1,"message":"293","line":135,"column":9,"nodeType":"259","messageId":"260","endLine":135,"endColumn":16},{"ruleId":"257","severity":1,"message":"291","line":136,"column":11,"nodeType":"259","messageId":"260","endLine":136,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":291,"column":34,"nodeType":"298","messageId":"299","endLine":291,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":293,"column":34,"nodeType":"298","messageId":"299","endLine":293,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":295,"column":34,"nodeType":"298","messageId":"299","endLine":295,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":297,"column":34,"nodeType":"298","messageId":"299","endLine":297,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":302,"column":35,"nodeType":"298","messageId":"299","endLine":302,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":304,"column":35,"nodeType":"298","messageId":"299","endLine":304,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":306,"column":35,"nodeType":"298","messageId":"299","endLine":306,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":308,"column":35,"nodeType":"298","messageId":"299","endLine":308,"endColumn":37},{"ruleId":"257","severity":1,"message":"302","line":4,"column":10,"nodeType":"259","messageId":"260","endLine":4,"endColumn":19},{"ruleId":"257","severity":1,"message":"287","line":4,"column":21,"nodeType":"259","messageId":"260","endLine":4,"endColumn":29},{"ruleId":"257","severity":1,"message":"303","line":5,"column":9,"nodeType":"259","messageId":"260","endLine":5,"endColumn":19},{"ruleId":"257","severity":1,"message":"282","line":50,"column":10,"nodeType":"259","messageId":"260","endLine":50,"endColumn":20},{"ruleId":"283","severity":1,"message":"284","line":141,"column":30,"nodeType":"285","messageId":"286","endLine":141,"endColumn":32},{"ruleId":"283","severity":1,"message":"284","line":142,"column":29,"nodeType":"285","messageId":"286","endLine":142,"endColumn":31},{"ruleId":"257","severity":1,"message":"304","line":15,"column":8,"nodeType":"259","messageId":"260","endLine":15,"endColumn":14},{"ruleId":"257","severity":1,"message":"288","line":19,"column":9,"nodeType":"259","messageId":"260","endLine":19,"endColumn":29},{"ruleId":"257","severity":1,"message":"289","line":20,"column":9,"nodeType":"259","messageId":"260","endLine":20,"endColumn":29},{"ruleId":"257","severity":1,"message":"290","line":67,"column":20,"nodeType":"259","messageId":"260","endLine":67,"endColumn":36},{"ruleId":"257","severity":1,"message":"291","line":67,"column":54,"nodeType":"259","messageId":"260","endLine":67,"endColumn":65},{"ruleId":"257","severity":1,"message":"292","line":67,"column":67,"nodeType":"259","messageId":"260","endLine":67,"endColumn":75},{"ruleId":"257","severity":1,"message":"293","line":137,"column":9,"nodeType":"259","messageId":"260","endLine":137,"endColumn":16},{"ruleId":"257","severity":1,"message":"291","line":138,"column":11,"nodeType":"259","messageId":"260","endLine":138,"endColumn":22},{"ruleId":"257","severity":1,"message":"305","line":250,"column":12,"nodeType":"259","messageId":"260","endLine":250,"endColumn":18},{"ruleId":"257","severity":1,"message":"269","line":256,"column":7,"nodeType":"259","messageId":"260","endLine":256,"endColumn":14},{"ruleId":"283","severity":1,"message":"294","line":285,"column":38,"nodeType":"285","messageId":"295","endLine":285,"endColumn":40},{"ruleId":"296","severity":1,"message":"297","line":294,"column":41,"nodeType":"298","messageId":"299","endLine":294,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":296,"column":41,"nodeType":"298","messageId":"299","endLine":296,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":298,"column":41,"nodeType":"298","messageId":"299","endLine":298,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":300,"column":41,"nodeType":"298","messageId":"299","endLine":300,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":305,"column":44,"nodeType":"298","messageId":"299","endLine":305,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":307,"column":44,"nodeType":"298","messageId":"299","endLine":307,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":309,"column":44,"nodeType":"298","messageId":"299","endLine":309,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":311,"column":44,"nodeType":"298","messageId":"299","endLine":311,"endColumn":46},{"ruleId":"257","severity":1,"message":"304","line":15,"column":8,"nodeType":"259","messageId":"260","endLine":15,"endColumn":14},{"ruleId":"257","severity":1,"message":"288","line":19,"column":9,"nodeType":"259","messageId":"260","endLine":19,"endColumn":29},{"ruleId":"257","severity":1,"message":"289","line":20,"column":9,"nodeType":"259","messageId":"260","endLine":20,"endColumn":29},{"ruleId":"257","severity":1,"message":"290","line":67,"column":20,"nodeType":"259","messageId":"260","endLine":67,"endColumn":36},{"ruleId":"257","severity":1,"message":"291","line":67,"column":54,"nodeType":"259","messageId":"260","endLine":67,"endColumn":65},{"ruleId":"257","severity":1,"message":"292","line":67,"column":67,"nodeType":"259","messageId":"260","endLine":67,"endColumn":75},{"ruleId":"257","severity":1,"message":"293","line":137,"column":9,"nodeType":"259","messageId":"260","endLine":137,"endColumn":16},{"ruleId":"257","severity":1,"message":"291","line":138,"column":11,"nodeType":"259","messageId":"260","endLine":138,"endColumn":22},{"ruleId":"257","severity":1,"message":"305","line":250,"column":12,"nodeType":"259","messageId":"260","endLine":250,"endColumn":18},{"ruleId":"257","severity":1,"message":"269","line":256,"column":7,"nodeType":"259","messageId":"260","endLine":256,"endColumn":14},{"ruleId":"283","severity":1,"message":"294","line":285,"column":38,"nodeType":"285","messageId":"295","endLine":285,"endColumn":40},{"ruleId":"296","severity":1,"message":"297","line":294,"column":41,"nodeType":"298","messageId":"299","endLine":294,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":296,"column":41,"nodeType":"298","messageId":"299","endLine":296,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":298,"column":41,"nodeType":"298","messageId":"299","endLine":298,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":300,"column":41,"nodeType":"298","messageId":"299","endLine":300,"endColumn":43},{"ruleId":"296","severity":1,"message":"297","line":305,"column":44,"nodeType":"298","messageId":"299","endLine":305,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":307,"column":44,"nodeType":"298","messageId":"299","endLine":307,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":309,"column":44,"nodeType":"298","messageId":"299","endLine":309,"endColumn":46},{"ruleId":"296","severity":1,"message":"297","line":311,"column":44,"nodeType":"298","messageId":"299","endLine":311,"endColumn":46},"no-unused-vars","'access_token' is assigned a value but never used.","Identifier","unusedVar","'userId' is assigned a value but never used.","'role' is assigned a value but never used.","'firstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["306"],"no-negated-in-lhs",["307"],"'handleChangeMultiple' is assigned a value but never used.",["306"],["307"],"'setName' is assigned a value but never used.","'getUserById' is defined but never used.","'reviwersId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'getMyApprovedReviews' is defined but never used.","'getMyRejectedReviews' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'classes' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'name' is assigned a value but never used.","'actionReview' is defined but never used.","'useEffect' is defined but never used.","'getRequest' is defined but never used.","'Button' is defined but never used.","'action' is defined but never used.","no-global-assign","no-unsafe-negation"]